//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication1.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IStatic")]
    public interface IStatic {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetDBStatus", ReplyAction="http://tempuri.org/IStatic/GetDBStatusResponse")]
        bool GetDBStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetDBStatus", ReplyAction="http://tempuri.org/IStatic/GetDBStatusResponse")]
        System.Threading.Tasks.Task<bool> GetDBStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/AuthenticateUser", ReplyAction="http://tempuri.org/IStatic/AuthenticateUserResponse")]
        BMA.BusinessLogic.User AuthenticateUser(BMA.BusinessLogic.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/AuthenticateUser", ReplyAction="http://tempuri.org/IStatic/AuthenticateUserResponse")]
        System.Threading.Tasks.Task<BMA.BusinessLogic.User> AuthenticateUserAsync(BMA.BusinessLogic.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/RegisterUser", ReplyAction="http://tempuri.org/IStatic/RegisterUserResponse")]
        BMA.BusinessLogic.User RegisterUser(BMA.BusinessLogic.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/RegisterUser", ReplyAction="http://tempuri.org/IStatic/RegisterUserResponse")]
        System.Threading.Tasks.Task<BMA.BusinessLogic.User> RegisterUserAsync(BMA.BusinessLogic.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/UpdateUser", ReplyAction="http://tempuri.org/IStatic/UpdateUserResponse")]
        BMA.BusinessLogic.User UpdateUser(BMA.BusinessLogic.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/UpdateUser", ReplyAction="http://tempuri.org/IStatic/UpdateUserResponse")]
        System.Threading.Tasks.Task<BMA.BusinessLogic.User> UpdateUserAsync(BMA.BusinessLogic.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/ChangePassword", ReplyAction="http://tempuri.org/IStatic/ChangePasswordResponse")]
        BMA.BusinessLogic.User ChangePassword(BMA.BusinessLogic.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/ChangePassword", ReplyAction="http://tempuri.org/IStatic/ChangePasswordResponse")]
        System.Threading.Tasks.Task<BMA.BusinessLogic.User> ChangePasswordAsync(BMA.BusinessLogic.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/ForgotPassword", ReplyAction="http://tempuri.org/IStatic/ForgotPasswordResponse")]
        BMA.BusinessLogic.User ForgotPassword(BMA.BusinessLogic.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/ForgotPassword", ReplyAction="http://tempuri.org/IStatic/ForgotPasswordResponse")]
        System.Threading.Tasks.Task<BMA.BusinessLogic.User> ForgotPasswordAsync(BMA.BusinessLogic.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetAllCategories", ReplyAction="http://tempuri.org/IStatic/GetAllCategoriesResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.Category> GetAllCategories(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetAllCategories", ReplyAction="http://tempuri.org/IStatic/GetAllCategoriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Category>> GetAllCategoriesAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetAllTypeTransactionReasons", ReplyAction="http://tempuri.org/IStatic/GetAllTypeTransactionReasonsResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.TypeTransactionReason> GetAllTypeTransactionReasons(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetAllTypeTransactionReasons", ReplyAction="http://tempuri.org/IStatic/GetAllTypeTransactionReasonsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.TypeTransactionReason>> GetAllTypeTransactionReasonsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetAllTypeTransactions", ReplyAction="http://tempuri.org/IStatic/GetAllTypeTransactionsResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.TypeTransaction> GetAllTypeTransactions(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetAllTypeTransactions", ReplyAction="http://tempuri.org/IStatic/GetAllTypeTransactionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.TypeTransaction>> GetAllTypeTransactionsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetAllTypeSavingsDencities", ReplyAction="http://tempuri.org/IStatic/GetAllTypeSavingsDencitiesResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.TypeSavingsDencity> GetAllTypeSavingsDencities(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetAllTypeSavingsDencities", ReplyAction="http://tempuri.org/IStatic/GetAllTypeSavingsDencitiesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.TypeSavingsDencity>> GetAllTypeSavingsDencitiesAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetAllNotifications", ReplyAction="http://tempuri.org/IStatic/GetAllNotificationsResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.Notification> GetAllNotifications(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetAllNotifications", ReplyAction="http://tempuri.org/IStatic/GetAllNotificationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Notification>> GetAllNotificationsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetAllTypeIntervals", ReplyAction="http://tempuri.org/IStatic/GetAllTypeIntervalsResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.TypeInterval> GetAllTypeIntervals(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetAllTypeIntervals", ReplyAction="http://tempuri.org/IStatic/GetAllTypeIntervalsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.TypeInterval>> GetAllTypeIntervalsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetAllTypeFrequencies", ReplyAction="http://tempuri.org/IStatic/GetAllTypeFrequenciesResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.TypeFrequency> GetAllTypeFrequencies(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetAllTypeFrequencies", ReplyAction="http://tempuri.org/IStatic/GetAllTypeFrequenciesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.TypeFrequency>> GetAllTypeFrequenciesAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetAllBudgetThresholds", ReplyAction="http://tempuri.org/IStatic/GetAllBudgetThresholdsResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.BudgetThreshold> GetAllBudgetThresholds(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetAllBudgetThresholds", ReplyAction="http://tempuri.org/IStatic/GetAllBudgetThresholdsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.BudgetThreshold>> GetAllBudgetThresholdsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetAllRecurrenceRules", ReplyAction="http://tempuri.org/IStatic/GetAllRecurrenceRulesResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.RecurrenceRule> GetAllRecurrenceRules();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetAllRecurrenceRules", ReplyAction="http://tempuri.org/IStatic/GetAllRecurrenceRulesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.RecurrenceRule>> GetAllRecurrenceRulesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetUpcomingNotifications", ReplyAction="http://tempuri.org/IStatic/GetUpcomingNotificationsResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.Notification> GetUpcomingNotifications(System.DateTime clientTime, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetUpcomingNotifications", ReplyAction="http://tempuri.org/IStatic/GetUpcomingNotificationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Notification>> GetUpcomingNotificationsAsync(System.DateTime clientTime, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetTypeIntervalConfiguration", ReplyAction="http://tempuri.org/IStatic/GetTypeIntervalConfigurationResponse")]
        BMA.BusinessLogic.TypeIntervalConfiguration GetTypeIntervalConfiguration(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/GetTypeIntervalConfiguration", ReplyAction="http://tempuri.org/IStatic/GetTypeIntervalConfigurationResponse")]
        System.Threading.Tasks.Task<BMA.BusinessLogic.TypeIntervalConfiguration> GetTypeIntervalConfigurationAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/SaveCategories", ReplyAction="http://tempuri.org/IStatic/SaveCategoriesResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.Category> SaveCategories(System.Collections.Generic.List<BMA.BusinessLogic.Category> categories);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/SaveCategories", ReplyAction="http://tempuri.org/IStatic/SaveCategoriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Category>> SaveCategoriesAsync(System.Collections.Generic.List<BMA.BusinessLogic.Category> categories);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/SaveTypeTransactionReasons", ReplyAction="http://tempuri.org/IStatic/SaveTypeTransactionReasonsResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.TypeTransactionReason> SaveTypeTransactionReasons(System.Collections.Generic.List<BMA.BusinessLogic.TypeTransactionReason> typeTransactionReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/SaveTypeTransactionReasons", ReplyAction="http://tempuri.org/IStatic/SaveTypeTransactionReasonsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.TypeTransactionReason>> SaveTypeTransactionReasonsAsync(System.Collections.Generic.List<BMA.BusinessLogic.TypeTransactionReason> typeTransactionReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/SaveNotifications", ReplyAction="http://tempuri.org/IStatic/SaveNotificationsResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.Notification> SaveNotifications(System.Collections.Generic.List<BMA.BusinessLogic.Notification> notifications);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/SaveNotifications", ReplyAction="http://tempuri.org/IStatic/SaveNotificationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Notification>> SaveNotificationsAsync(System.Collections.Generic.List<BMA.BusinessLogic.Notification> notifications);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/SaveTypeTransactions", ReplyAction="http://tempuri.org/IStatic/SaveTypeTransactionsResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.TypeTransaction> SaveTypeTransactions(System.Collections.Generic.List<BMA.BusinessLogic.TypeTransaction> typeTransactions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/SaveTypeTransactions", ReplyAction="http://tempuri.org/IStatic/SaveTypeTransactionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.TypeTransaction>> SaveTypeTransactionsAsync(System.Collections.Generic.List<BMA.BusinessLogic.TypeTransaction> typeTransactions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/SaveTypeFrequencies", ReplyAction="http://tempuri.org/IStatic/SaveTypeFrequenciesResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.TypeFrequency> SaveTypeFrequencies(System.Collections.Generic.List<BMA.BusinessLogic.TypeFrequency> typeFrequencies);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/SaveTypeFrequencies", ReplyAction="http://tempuri.org/IStatic/SaveTypeFrequenciesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.TypeFrequency>> SaveTypeFrequenciesAsync(System.Collections.Generic.List<BMA.BusinessLogic.TypeFrequency> typeFrequencies);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/SaveTypeIntervals", ReplyAction="http://tempuri.org/IStatic/SaveTypeIntervalsResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.TypeInterval> SaveTypeIntervals(System.Collections.Generic.List<BMA.BusinessLogic.TypeInterval> interval);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/SaveTypeIntervals", ReplyAction="http://tempuri.org/IStatic/SaveTypeIntervalsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.TypeInterval>> SaveTypeIntervalsAsync(System.Collections.Generic.List<BMA.BusinessLogic.TypeInterval> interval);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/SaveBudgetThresholds", ReplyAction="http://tempuri.org/IStatic/SaveBudgetThresholdsResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.BudgetThreshold> SaveBudgetThresholds(System.Collections.Generic.List<BMA.BusinessLogic.BudgetThreshold> budgetThreshold);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatic/SaveBudgetThresholds", ReplyAction="http://tempuri.org/IStatic/SaveBudgetThresholdsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.BudgetThreshold>> SaveBudgetThresholdsAsync(System.Collections.Generic.List<BMA.BusinessLogic.BudgetThreshold> budgetThreshold);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStaticChannel : ConsoleApplication1.ServiceReference2.IStatic, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StaticClient : System.ServiceModel.ClientBase<ConsoleApplication1.ServiceReference2.IStatic>, ConsoleApplication1.ServiceReference2.IStatic {
        
        public StaticClient() {
        }
        
        public StaticClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StaticClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StaticClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StaticClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool GetDBStatus() {
            return base.Channel.GetDBStatus();
        }
        
        public System.Threading.Tasks.Task<bool> GetDBStatusAsync() {
            return base.Channel.GetDBStatusAsync();
        }
        
        public BMA.BusinessLogic.User AuthenticateUser(BMA.BusinessLogic.User user) {
            return base.Channel.AuthenticateUser(user);
        }
        
        public System.Threading.Tasks.Task<BMA.BusinessLogic.User> AuthenticateUserAsync(BMA.BusinessLogic.User user) {
            return base.Channel.AuthenticateUserAsync(user);
        }
        
        public BMA.BusinessLogic.User RegisterUser(BMA.BusinessLogic.User user) {
            return base.Channel.RegisterUser(user);
        }
        
        public System.Threading.Tasks.Task<BMA.BusinessLogic.User> RegisterUserAsync(BMA.BusinessLogic.User user) {
            return base.Channel.RegisterUserAsync(user);
        }
        
        public BMA.BusinessLogic.User UpdateUser(BMA.BusinessLogic.User user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<BMA.BusinessLogic.User> UpdateUserAsync(BMA.BusinessLogic.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public BMA.BusinessLogic.User ChangePassword(BMA.BusinessLogic.User user) {
            return base.Channel.ChangePassword(user);
        }
        
        public System.Threading.Tasks.Task<BMA.BusinessLogic.User> ChangePasswordAsync(BMA.BusinessLogic.User user) {
            return base.Channel.ChangePasswordAsync(user);
        }
        
        public BMA.BusinessLogic.User ForgotPassword(BMA.BusinessLogic.User user) {
            return base.Channel.ForgotPassword(user);
        }
        
        public System.Threading.Tasks.Task<BMA.BusinessLogic.User> ForgotPasswordAsync(BMA.BusinessLogic.User user) {
            return base.Channel.ForgotPasswordAsync(user);
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.Category> GetAllCategories(int userId) {
            return base.Channel.GetAllCategories(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Category>> GetAllCategoriesAsync(int userId) {
            return base.Channel.GetAllCategoriesAsync(userId);
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.TypeTransactionReason> GetAllTypeTransactionReasons(int userId) {
            return base.Channel.GetAllTypeTransactionReasons(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.TypeTransactionReason>> GetAllTypeTransactionReasonsAsync(int userId) {
            return base.Channel.GetAllTypeTransactionReasonsAsync(userId);
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.TypeTransaction> GetAllTypeTransactions(int userId) {
            return base.Channel.GetAllTypeTransactions(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.TypeTransaction>> GetAllTypeTransactionsAsync(int userId) {
            return base.Channel.GetAllTypeTransactionsAsync(userId);
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.TypeSavingsDencity> GetAllTypeSavingsDencities(int userId) {
            return base.Channel.GetAllTypeSavingsDencities(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.TypeSavingsDencity>> GetAllTypeSavingsDencitiesAsync(int userId) {
            return base.Channel.GetAllTypeSavingsDencitiesAsync(userId);
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.Notification> GetAllNotifications(int userId) {
            return base.Channel.GetAllNotifications(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Notification>> GetAllNotificationsAsync(int userId) {
            return base.Channel.GetAllNotificationsAsync(userId);
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.TypeInterval> GetAllTypeIntervals(int userId) {
            return base.Channel.GetAllTypeIntervals(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.TypeInterval>> GetAllTypeIntervalsAsync(int userId) {
            return base.Channel.GetAllTypeIntervalsAsync(userId);
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.TypeFrequency> GetAllTypeFrequencies(int userId) {
            return base.Channel.GetAllTypeFrequencies(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.TypeFrequency>> GetAllTypeFrequenciesAsync(int userId) {
            return base.Channel.GetAllTypeFrequenciesAsync(userId);
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.BudgetThreshold> GetAllBudgetThresholds(int userId) {
            return base.Channel.GetAllBudgetThresholds(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.BudgetThreshold>> GetAllBudgetThresholdsAsync(int userId) {
            return base.Channel.GetAllBudgetThresholdsAsync(userId);
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.RecurrenceRule> GetAllRecurrenceRules() {
            return base.Channel.GetAllRecurrenceRules();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.RecurrenceRule>> GetAllRecurrenceRulesAsync() {
            return base.Channel.GetAllRecurrenceRulesAsync();
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.Notification> GetUpcomingNotifications(System.DateTime clientTime, int userId) {
            return base.Channel.GetUpcomingNotifications(clientTime, userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Notification>> GetUpcomingNotificationsAsync(System.DateTime clientTime, int userId) {
            return base.Channel.GetUpcomingNotificationsAsync(clientTime, userId);
        }
        
        public BMA.BusinessLogic.TypeIntervalConfiguration GetTypeIntervalConfiguration(int userId) {
            return base.Channel.GetTypeIntervalConfiguration(userId);
        }
        
        public System.Threading.Tasks.Task<BMA.BusinessLogic.TypeIntervalConfiguration> GetTypeIntervalConfigurationAsync(int userId) {
            return base.Channel.GetTypeIntervalConfigurationAsync(userId);
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.Category> SaveCategories(System.Collections.Generic.List<BMA.BusinessLogic.Category> categories) {
            return base.Channel.SaveCategories(categories);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Category>> SaveCategoriesAsync(System.Collections.Generic.List<BMA.BusinessLogic.Category> categories) {
            return base.Channel.SaveCategoriesAsync(categories);
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.TypeTransactionReason> SaveTypeTransactionReasons(System.Collections.Generic.List<BMA.BusinessLogic.TypeTransactionReason> typeTransactionReason) {
            return base.Channel.SaveTypeTransactionReasons(typeTransactionReason);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.TypeTransactionReason>> SaveTypeTransactionReasonsAsync(System.Collections.Generic.List<BMA.BusinessLogic.TypeTransactionReason> typeTransactionReason) {
            return base.Channel.SaveTypeTransactionReasonsAsync(typeTransactionReason);
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.Notification> SaveNotifications(System.Collections.Generic.List<BMA.BusinessLogic.Notification> notifications) {
            return base.Channel.SaveNotifications(notifications);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Notification>> SaveNotificationsAsync(System.Collections.Generic.List<BMA.BusinessLogic.Notification> notifications) {
            return base.Channel.SaveNotificationsAsync(notifications);
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.TypeTransaction> SaveTypeTransactions(System.Collections.Generic.List<BMA.BusinessLogic.TypeTransaction> typeTransactions) {
            return base.Channel.SaveTypeTransactions(typeTransactions);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.TypeTransaction>> SaveTypeTransactionsAsync(System.Collections.Generic.List<BMA.BusinessLogic.TypeTransaction> typeTransactions) {
            return base.Channel.SaveTypeTransactionsAsync(typeTransactions);
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.TypeFrequency> SaveTypeFrequencies(System.Collections.Generic.List<BMA.BusinessLogic.TypeFrequency> typeFrequencies) {
            return base.Channel.SaveTypeFrequencies(typeFrequencies);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.TypeFrequency>> SaveTypeFrequenciesAsync(System.Collections.Generic.List<BMA.BusinessLogic.TypeFrequency> typeFrequencies) {
            return base.Channel.SaveTypeFrequenciesAsync(typeFrequencies);
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.TypeInterval> SaveTypeIntervals(System.Collections.Generic.List<BMA.BusinessLogic.TypeInterval> interval) {
            return base.Channel.SaveTypeIntervals(interval);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.TypeInterval>> SaveTypeIntervalsAsync(System.Collections.Generic.List<BMA.BusinessLogic.TypeInterval> interval) {
            return base.Channel.SaveTypeIntervalsAsync(interval);
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.BudgetThreshold> SaveBudgetThresholds(System.Collections.Generic.List<BMA.BusinessLogic.BudgetThreshold> budgetThreshold) {
            return base.Channel.SaveBudgetThresholds(budgetThreshold);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.BudgetThreshold>> SaveBudgetThresholdsAsync(System.Collections.Generic.List<BMA.BusinessLogic.BudgetThreshold> budgetThreshold) {
            return base.Channel.SaveBudgetThresholdsAsync(budgetThreshold);
        }
    }
}
