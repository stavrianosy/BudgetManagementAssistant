//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace BMA_WP.BMAService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BMAService.IMain")]
    public interface IMain {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/GetDBStatus", ReplyAction="http://tempuri.org/IMain/GetDBStatusResponse")]
        System.IAsyncResult BeginGetDBStatus(System.AsyncCallback callback, object asyncState);
        
        bool EndGetDBStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/GetLatestTransactionDate", ReplyAction="http://tempuri.org/IMain/GetLatestTransactionDateResponse")]
        System.IAsyncResult BeginGetLatestTransactionDate(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetLatestTransactionDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/GetLatestTransactionDateDouble", ReplyAction="http://tempuri.org/IMain/GetLatestTransactionDateDoubleResponse")]
        System.IAsyncResult BeginGetLatestTransactionDateDouble(int userId, System.AsyncCallback callback, object asyncState);
        
        double EndGetLatestTransactionDateDouble(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/GetAllTransactions", ReplyAction="http://tempuri.org/IMain/GetAllTransactionsResponse")]
        System.IAsyncResult BeginGetAllTransactions(int userId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> EndGetAllTransactions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/GetLatestTransactions", ReplyAction="http://tempuri.org/IMain/GetLatestTransactionsResponse")]
        System.IAsyncResult BeginGetLatestTransactions(int userId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> EndGetLatestTransactions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/GetLatestTransactionsOnDate", ReplyAction="http://tempuri.org/IMain/GetLatestTransactionsOnDateResponse")]
        System.IAsyncResult BeginGetLatestTransactionsOnDate(int userId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> EndGetLatestTransactionsOnDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/GetLatestTransactionsLimit", ReplyAction="http://tempuri.org/IMain/GetLatestTransactionsLimitResponse")]
        System.IAsyncResult BeginGetLatestTransactionsLimit(int latestRecs, int userId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> EndGetLatestTransactionsLimit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/GetTransactionsForBudget", ReplyAction="http://tempuri.org/IMain/GetTransactionsForBudgetResponse")]
        System.IAsyncResult BeginGetTransactionsForBudget(int budgetId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> EndGetTransactionsForBudget(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/GetImagesForTransaction", ReplyAction="http://tempuri.org/IMain/GetImagesForTransactionResponse")]
        System.IAsyncResult BeginGetImagesForTransaction(int transactionId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.TransactionImage> EndGetImagesForTransaction(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/GetAllBudgets", ReplyAction="http://tempuri.org/IMain/GetAllBudgetsResponse")]
        System.IAsyncResult BeginGetAllBudgets(int userId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> EndGetAllBudgets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/LoadItemCounts", ReplyAction="http://tempuri.org/IMain/LoadItemCountsResponse")]
        System.IAsyncResult BeginLoadItemCounts(int userId, System.AsyncCallback callback, object asyncState);
        
        BMA.BusinessLogic.StartupInfo EndLoadItemCounts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/SyncTransactions", ReplyAction="http://tempuri.org/IMain/SyncTransactionsResponse")]
        System.IAsyncResult BeginSyncTransactions(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> transactions, System.AsyncCallback callback, object asyncState);
        
        bool EndSyncTransactions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/SyncBudgets", ReplyAction="http://tempuri.org/IMain/SyncBudgetsResponse")]
        System.IAsyncResult BeginSyncBudgets(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> budgets, System.AsyncCallback callback, object asyncState);
        
        bool EndSyncBudgets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/SaveTransactions", ReplyAction="http://tempuri.org/IMain/SaveTransactionsResponse")]
        System.IAsyncResult BeginSaveTransactions(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> transactions, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> EndSaveTransactions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/SaveBudgets", ReplyAction="http://tempuri.org/IMain/SaveBudgetsResponse")]
        System.IAsyncResult BeginSaveBudgets(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> budgets, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> EndSaveBudgets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/SaveTransactionImages", ReplyAction="http://tempuri.org/IMain/SaveTransactionImagesResponse")]
        System.IAsyncResult BeginSaveTransactionImages(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.TransactionImage> transactionImages, System.AsyncCallback callback, object asyncState);
        
        bool EndSaveTransactionImages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/ReportTransactionAmount", ReplyAction="http://tempuri.org/IMain/ReportTransactionAmountResponse")]
        System.IAsyncResult BeginReportTransactionAmount(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, double amountFrom, double amountTo, int userId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> EndReportTransactionAmount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/ReportTransactionCategory", ReplyAction="http://tempuri.org/IMain/ReportTransactionCategoryResponse")]
        System.IAsyncResult BeginReportTransactionCategory(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, int userId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<BMA.BusinessLogic.Category, double> EndReportTransactionCategory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/ReportTransactionReason", ReplyAction="http://tempuri.org/IMain/ReportTransactionReasonResponse")]
        System.IAsyncResult BeginReportTransactionReason(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, int userId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<BMA.BusinessLogic.TypeTransactionReason, double> EndReportTransactionReason(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/ReportTransactionBudget", ReplyAction="http://tempuri.org/IMain/ReportTransactionBudgetResponse")]
        System.IAsyncResult BeginReportTransactionBudget(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, int userId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> EndReportTransactionBudget(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/ReportTransactionNameOfPlace", ReplyAction="http://tempuri.org/IMain/ReportTransactionNameOfPlaceResponse")]
        System.IAsyncResult BeginReportTransactionNameOfPlace(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, int userId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, double> EndReportTransactionNameOfPlace(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainChannel : BMA_WP.BMAService.IMain, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDBStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDBStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLatestTransactionDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestTransactionDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLatestTransactionDateDoubleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestTransactionDateDoubleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLatestTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLatestTransactionsOnDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestTransactionsOnDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLatestTransactionsLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestTransactionsLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTransactionsForBudgetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTransactionsForBudgetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetImagesForTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetImagesForTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.TransactionImage> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.TransactionImage>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllBudgetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllBudgetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadItemCountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadItemCountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BMA.BusinessLogic.StartupInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BMA.BusinessLogic.StartupInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SyncTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SyncTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SyncBudgetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SyncBudgetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveBudgetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveBudgetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveTransactionImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveTransactionImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportTransactionAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReportTransactionAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportTransactionCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReportTransactionCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<BMA.BusinessLogic.Category, double> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<BMA.BusinessLogic.Category, double>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportTransactionReasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReportTransactionReasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<BMA.BusinessLogic.TypeTransactionReason, double> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<BMA.BusinessLogic.TypeTransactionReason, double>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportTransactionBudgetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReportTransactionBudgetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportTransactionNameOfPlaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReportTransactionNameOfPlaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, double> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, double>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainClient : System.ServiceModel.ClientBase<BMA_WP.BMAService.IMain>, BMA_WP.BMAService.IMain {
        
        private BeginOperationDelegate onBeginGetDBStatusDelegate;
        
        private EndOperationDelegate onEndGetDBStatusDelegate;
        
        private System.Threading.SendOrPostCallback onGetDBStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestTransactionDateDelegate;
        
        private EndOperationDelegate onEndGetLatestTransactionDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestTransactionDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestTransactionDateDoubleDelegate;
        
        private EndOperationDelegate onEndGetLatestTransactionDateDoubleDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestTransactionDateDoubleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllTransactionsDelegate;
        
        private EndOperationDelegate onEndGetAllTransactionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllTransactionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestTransactionsDelegate;
        
        private EndOperationDelegate onEndGetLatestTransactionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestTransactionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestTransactionsOnDateDelegate;
        
        private EndOperationDelegate onEndGetLatestTransactionsOnDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestTransactionsOnDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestTransactionsLimitDelegate;
        
        private EndOperationDelegate onEndGetLatestTransactionsLimitDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestTransactionsLimitCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTransactionsForBudgetDelegate;
        
        private EndOperationDelegate onEndGetTransactionsForBudgetDelegate;
        
        private System.Threading.SendOrPostCallback onGetTransactionsForBudgetCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetImagesForTransactionDelegate;
        
        private EndOperationDelegate onEndGetImagesForTransactionDelegate;
        
        private System.Threading.SendOrPostCallback onGetImagesForTransactionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllBudgetsDelegate;
        
        private EndOperationDelegate onEndGetAllBudgetsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllBudgetsCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadItemCountsDelegate;
        
        private EndOperationDelegate onEndLoadItemCountsDelegate;
        
        private System.Threading.SendOrPostCallback onLoadItemCountsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSyncTransactionsDelegate;
        
        private EndOperationDelegate onEndSyncTransactionsDelegate;
        
        private System.Threading.SendOrPostCallback onSyncTransactionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSyncBudgetsDelegate;
        
        private EndOperationDelegate onEndSyncBudgetsDelegate;
        
        private System.Threading.SendOrPostCallback onSyncBudgetsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveTransactionsDelegate;
        
        private EndOperationDelegate onEndSaveTransactionsDelegate;
        
        private System.Threading.SendOrPostCallback onSaveTransactionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveBudgetsDelegate;
        
        private EndOperationDelegate onEndSaveBudgetsDelegate;
        
        private System.Threading.SendOrPostCallback onSaveBudgetsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveTransactionImagesDelegate;
        
        private EndOperationDelegate onEndSaveTransactionImagesDelegate;
        
        private System.Threading.SendOrPostCallback onSaveTransactionImagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginReportTransactionAmountDelegate;
        
        private EndOperationDelegate onEndReportTransactionAmountDelegate;
        
        private System.Threading.SendOrPostCallback onReportTransactionAmountCompletedDelegate;
        
        private BeginOperationDelegate onBeginReportTransactionCategoryDelegate;
        
        private EndOperationDelegate onEndReportTransactionCategoryDelegate;
        
        private System.Threading.SendOrPostCallback onReportTransactionCategoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginReportTransactionReasonDelegate;
        
        private EndOperationDelegate onEndReportTransactionReasonDelegate;
        
        private System.Threading.SendOrPostCallback onReportTransactionReasonCompletedDelegate;
        
        private BeginOperationDelegate onBeginReportTransactionBudgetDelegate;
        
        private EndOperationDelegate onEndReportTransactionBudgetDelegate;
        
        private System.Threading.SendOrPostCallback onReportTransactionBudgetCompletedDelegate;
        
        private BeginOperationDelegate onBeginReportTransactionNameOfPlaceDelegate;
        
        private EndOperationDelegate onEndReportTransactionNameOfPlaceDelegate;
        
        private System.Threading.SendOrPostCallback onReportTransactionNameOfPlaceCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MainClient() {
        }
        
        public MainClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MainClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetDBStatusCompletedEventArgs> GetDBStatusCompleted;
        
        public event System.EventHandler<GetLatestTransactionDateCompletedEventArgs> GetLatestTransactionDateCompleted;
        
        public event System.EventHandler<GetLatestTransactionDateDoubleCompletedEventArgs> GetLatestTransactionDateDoubleCompleted;
        
        public event System.EventHandler<GetAllTransactionsCompletedEventArgs> GetAllTransactionsCompleted;
        
        public event System.EventHandler<GetLatestTransactionsCompletedEventArgs> GetLatestTransactionsCompleted;
        
        public event System.EventHandler<GetLatestTransactionsOnDateCompletedEventArgs> GetLatestTransactionsOnDateCompleted;
        
        public event System.EventHandler<GetLatestTransactionsLimitCompletedEventArgs> GetLatestTransactionsLimitCompleted;
        
        public event System.EventHandler<GetTransactionsForBudgetCompletedEventArgs> GetTransactionsForBudgetCompleted;
        
        public event System.EventHandler<GetImagesForTransactionCompletedEventArgs> GetImagesForTransactionCompleted;
        
        public event System.EventHandler<GetAllBudgetsCompletedEventArgs> GetAllBudgetsCompleted;
        
        public event System.EventHandler<LoadItemCountsCompletedEventArgs> LoadItemCountsCompleted;
        
        public event System.EventHandler<SyncTransactionsCompletedEventArgs> SyncTransactionsCompleted;
        
        public event System.EventHandler<SyncBudgetsCompletedEventArgs> SyncBudgetsCompleted;
        
        public event System.EventHandler<SaveTransactionsCompletedEventArgs> SaveTransactionsCompleted;
        
        public event System.EventHandler<SaveBudgetsCompletedEventArgs> SaveBudgetsCompleted;
        
        public event System.EventHandler<SaveTransactionImagesCompletedEventArgs> SaveTransactionImagesCompleted;
        
        public event System.EventHandler<ReportTransactionAmountCompletedEventArgs> ReportTransactionAmountCompleted;
        
        public event System.EventHandler<ReportTransactionCategoryCompletedEventArgs> ReportTransactionCategoryCompleted;
        
        public event System.EventHandler<ReportTransactionReasonCompletedEventArgs> ReportTransactionReasonCompleted;
        
        public event System.EventHandler<ReportTransactionBudgetCompletedEventArgs> ReportTransactionBudgetCompleted;
        
        public event System.EventHandler<ReportTransactionNameOfPlaceCompletedEventArgs> ReportTransactionNameOfPlaceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BMA_WP.BMAService.IMain.BeginGetDBStatus(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDBStatus(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool BMA_WP.BMAService.IMain.EndGetDBStatus(System.IAsyncResult result) {
            return base.Channel.EndGetDBStatus(result);
        }
        
        private System.IAsyncResult OnBeginGetDBStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((BMA_WP.BMAService.IMain)(this)).BeginGetDBStatus(callback, asyncState);
        }
        
        private object[] OnEndGetDBStatus(System.IAsyncResult result) {
            bool retVal = ((BMA_WP.BMAService.IMain)(this)).EndGetDBStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDBStatusCompleted(object state) {
            if ((this.GetDBStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDBStatusCompleted(this, new GetDBStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDBStatusAsync() {
            this.GetDBStatusAsync(null);
        }
        
        public void GetDBStatusAsync(object userState) {
            if ((this.onBeginGetDBStatusDelegate == null)) {
                this.onBeginGetDBStatusDelegate = new BeginOperationDelegate(this.OnBeginGetDBStatus);
            }
            if ((this.onEndGetDBStatusDelegate == null)) {
                this.onEndGetDBStatusDelegate = new EndOperationDelegate(this.OnEndGetDBStatus);
            }
            if ((this.onGetDBStatusCompletedDelegate == null)) {
                this.onGetDBStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDBStatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetDBStatusDelegate, null, this.onEndGetDBStatusDelegate, this.onGetDBStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BMA_WP.BMAService.IMain.BeginGetLatestTransactionDate(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestTransactionDate(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.DateTime BMA_WP.BMAService.IMain.EndGetLatestTransactionDate(System.IAsyncResult result) {
            return base.Channel.EndGetLatestTransactionDate(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestTransactionDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((BMA_WP.BMAService.IMain)(this)).BeginGetLatestTransactionDate(callback, asyncState);
        }
        
        private object[] OnEndGetLatestTransactionDate(System.IAsyncResult result) {
            System.DateTime retVal = ((BMA_WP.BMAService.IMain)(this)).EndGetLatestTransactionDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestTransactionDateCompleted(object state) {
            if ((this.GetLatestTransactionDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestTransactionDateCompleted(this, new GetLatestTransactionDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestTransactionDateAsync() {
            this.GetLatestTransactionDateAsync(null);
        }
        
        public void GetLatestTransactionDateAsync(object userState) {
            if ((this.onBeginGetLatestTransactionDateDelegate == null)) {
                this.onBeginGetLatestTransactionDateDelegate = new BeginOperationDelegate(this.OnBeginGetLatestTransactionDate);
            }
            if ((this.onEndGetLatestTransactionDateDelegate == null)) {
                this.onEndGetLatestTransactionDateDelegate = new EndOperationDelegate(this.OnEndGetLatestTransactionDate);
            }
            if ((this.onGetLatestTransactionDateCompletedDelegate == null)) {
                this.onGetLatestTransactionDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestTransactionDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestTransactionDateDelegate, null, this.onEndGetLatestTransactionDateDelegate, this.onGetLatestTransactionDateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BMA_WP.BMAService.IMain.BeginGetLatestTransactionDateDouble(int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestTransactionDateDouble(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double BMA_WP.BMAService.IMain.EndGetLatestTransactionDateDouble(System.IAsyncResult result) {
            return base.Channel.EndGetLatestTransactionDateDouble(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestTransactionDateDouble(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            return ((BMA_WP.BMAService.IMain)(this)).BeginGetLatestTransactionDateDouble(userId, callback, asyncState);
        }
        
        private object[] OnEndGetLatestTransactionDateDouble(System.IAsyncResult result) {
            double retVal = ((BMA_WP.BMAService.IMain)(this)).EndGetLatestTransactionDateDouble(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestTransactionDateDoubleCompleted(object state) {
            if ((this.GetLatestTransactionDateDoubleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestTransactionDateDoubleCompleted(this, new GetLatestTransactionDateDoubleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestTransactionDateDoubleAsync(int userId) {
            this.GetLatestTransactionDateDoubleAsync(userId, null);
        }
        
        public void GetLatestTransactionDateDoubleAsync(int userId, object userState) {
            if ((this.onBeginGetLatestTransactionDateDoubleDelegate == null)) {
                this.onBeginGetLatestTransactionDateDoubleDelegate = new BeginOperationDelegate(this.OnBeginGetLatestTransactionDateDouble);
            }
            if ((this.onEndGetLatestTransactionDateDoubleDelegate == null)) {
                this.onEndGetLatestTransactionDateDoubleDelegate = new EndOperationDelegate(this.OnEndGetLatestTransactionDateDouble);
            }
            if ((this.onGetLatestTransactionDateDoubleCompletedDelegate == null)) {
                this.onGetLatestTransactionDateDoubleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestTransactionDateDoubleCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestTransactionDateDoubleDelegate, new object[] {
                        userId}, this.onEndGetLatestTransactionDateDoubleDelegate, this.onGetLatestTransactionDateDoubleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BMA_WP.BMAService.IMain.BeginGetAllTransactions(int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllTransactions(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> BMA_WP.BMAService.IMain.EndGetAllTransactions(System.IAsyncResult result) {
            return base.Channel.EndGetAllTransactions(result);
        }
        
        private System.IAsyncResult OnBeginGetAllTransactions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            return ((BMA_WP.BMAService.IMain)(this)).BeginGetAllTransactions(userId, callback, asyncState);
        }
        
        private object[] OnEndGetAllTransactions(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> retVal = ((BMA_WP.BMAService.IMain)(this)).EndGetAllTransactions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllTransactionsCompleted(object state) {
            if ((this.GetAllTransactionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllTransactionsCompleted(this, new GetAllTransactionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllTransactionsAsync(int userId) {
            this.GetAllTransactionsAsync(userId, null);
        }
        
        public void GetAllTransactionsAsync(int userId, object userState) {
            if ((this.onBeginGetAllTransactionsDelegate == null)) {
                this.onBeginGetAllTransactionsDelegate = new BeginOperationDelegate(this.OnBeginGetAllTransactions);
            }
            if ((this.onEndGetAllTransactionsDelegate == null)) {
                this.onEndGetAllTransactionsDelegate = new EndOperationDelegate(this.OnEndGetAllTransactions);
            }
            if ((this.onGetAllTransactionsCompletedDelegate == null)) {
                this.onGetAllTransactionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllTransactionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllTransactionsDelegate, new object[] {
                        userId}, this.onEndGetAllTransactionsDelegate, this.onGetAllTransactionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BMA_WP.BMAService.IMain.BeginGetLatestTransactions(int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestTransactions(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> BMA_WP.BMAService.IMain.EndGetLatestTransactions(System.IAsyncResult result) {
            return base.Channel.EndGetLatestTransactions(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestTransactions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            return ((BMA_WP.BMAService.IMain)(this)).BeginGetLatestTransactions(userId, callback, asyncState);
        }
        
        private object[] OnEndGetLatestTransactions(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> retVal = ((BMA_WP.BMAService.IMain)(this)).EndGetLatestTransactions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestTransactionsCompleted(object state) {
            if ((this.GetLatestTransactionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestTransactionsCompleted(this, new GetLatestTransactionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestTransactionsAsync(int userId) {
            this.GetLatestTransactionsAsync(userId, null);
        }
        
        public void GetLatestTransactionsAsync(int userId, object userState) {
            if ((this.onBeginGetLatestTransactionsDelegate == null)) {
                this.onBeginGetLatestTransactionsDelegate = new BeginOperationDelegate(this.OnBeginGetLatestTransactions);
            }
            if ((this.onEndGetLatestTransactionsDelegate == null)) {
                this.onEndGetLatestTransactionsDelegate = new EndOperationDelegate(this.OnEndGetLatestTransactions);
            }
            if ((this.onGetLatestTransactionsCompletedDelegate == null)) {
                this.onGetLatestTransactionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestTransactionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestTransactionsDelegate, new object[] {
                        userId}, this.onEndGetLatestTransactionsDelegate, this.onGetLatestTransactionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BMA_WP.BMAService.IMain.BeginGetLatestTransactionsOnDate(int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestTransactionsOnDate(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> BMA_WP.BMAService.IMain.EndGetLatestTransactionsOnDate(System.IAsyncResult result) {
            return base.Channel.EndGetLatestTransactionsOnDate(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestTransactionsOnDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            return ((BMA_WP.BMAService.IMain)(this)).BeginGetLatestTransactionsOnDate(userId, callback, asyncState);
        }
        
        private object[] OnEndGetLatestTransactionsOnDate(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> retVal = ((BMA_WP.BMAService.IMain)(this)).EndGetLatestTransactionsOnDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestTransactionsOnDateCompleted(object state) {
            if ((this.GetLatestTransactionsOnDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestTransactionsOnDateCompleted(this, new GetLatestTransactionsOnDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestTransactionsOnDateAsync(int userId) {
            this.GetLatestTransactionsOnDateAsync(userId, null);
        }
        
        public void GetLatestTransactionsOnDateAsync(int userId, object userState) {
            if ((this.onBeginGetLatestTransactionsOnDateDelegate == null)) {
                this.onBeginGetLatestTransactionsOnDateDelegate = new BeginOperationDelegate(this.OnBeginGetLatestTransactionsOnDate);
            }
            if ((this.onEndGetLatestTransactionsOnDateDelegate == null)) {
                this.onEndGetLatestTransactionsOnDateDelegate = new EndOperationDelegate(this.OnEndGetLatestTransactionsOnDate);
            }
            if ((this.onGetLatestTransactionsOnDateCompletedDelegate == null)) {
                this.onGetLatestTransactionsOnDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestTransactionsOnDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestTransactionsOnDateDelegate, new object[] {
                        userId}, this.onEndGetLatestTransactionsOnDateDelegate, this.onGetLatestTransactionsOnDateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BMA_WP.BMAService.IMain.BeginGetLatestTransactionsLimit(int latestRecs, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestTransactionsLimit(latestRecs, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> BMA_WP.BMAService.IMain.EndGetLatestTransactionsLimit(System.IAsyncResult result) {
            return base.Channel.EndGetLatestTransactionsLimit(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestTransactionsLimit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int latestRecs = ((int)(inValues[0]));
            int userId = ((int)(inValues[1]));
            return ((BMA_WP.BMAService.IMain)(this)).BeginGetLatestTransactionsLimit(latestRecs, userId, callback, asyncState);
        }
        
        private object[] OnEndGetLatestTransactionsLimit(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> retVal = ((BMA_WP.BMAService.IMain)(this)).EndGetLatestTransactionsLimit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestTransactionsLimitCompleted(object state) {
            if ((this.GetLatestTransactionsLimitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestTransactionsLimitCompleted(this, new GetLatestTransactionsLimitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestTransactionsLimitAsync(int latestRecs, int userId) {
            this.GetLatestTransactionsLimitAsync(latestRecs, userId, null);
        }
        
        public void GetLatestTransactionsLimitAsync(int latestRecs, int userId, object userState) {
            if ((this.onBeginGetLatestTransactionsLimitDelegate == null)) {
                this.onBeginGetLatestTransactionsLimitDelegate = new BeginOperationDelegate(this.OnBeginGetLatestTransactionsLimit);
            }
            if ((this.onEndGetLatestTransactionsLimitDelegate == null)) {
                this.onEndGetLatestTransactionsLimitDelegate = new EndOperationDelegate(this.OnEndGetLatestTransactionsLimit);
            }
            if ((this.onGetLatestTransactionsLimitCompletedDelegate == null)) {
                this.onGetLatestTransactionsLimitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestTransactionsLimitCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestTransactionsLimitDelegate, new object[] {
                        latestRecs,
                        userId}, this.onEndGetLatestTransactionsLimitDelegate, this.onGetLatestTransactionsLimitCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BMA_WP.BMAService.IMain.BeginGetTransactionsForBudget(int budgetId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTransactionsForBudget(budgetId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> BMA_WP.BMAService.IMain.EndGetTransactionsForBudget(System.IAsyncResult result) {
            return base.Channel.EndGetTransactionsForBudget(result);
        }
        
        private System.IAsyncResult OnBeginGetTransactionsForBudget(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int budgetId = ((int)(inValues[0]));
            return ((BMA_WP.BMAService.IMain)(this)).BeginGetTransactionsForBudget(budgetId, callback, asyncState);
        }
        
        private object[] OnEndGetTransactionsForBudget(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> retVal = ((BMA_WP.BMAService.IMain)(this)).EndGetTransactionsForBudget(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTransactionsForBudgetCompleted(object state) {
            if ((this.GetTransactionsForBudgetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTransactionsForBudgetCompleted(this, new GetTransactionsForBudgetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTransactionsForBudgetAsync(int budgetId) {
            this.GetTransactionsForBudgetAsync(budgetId, null);
        }
        
        public void GetTransactionsForBudgetAsync(int budgetId, object userState) {
            if ((this.onBeginGetTransactionsForBudgetDelegate == null)) {
                this.onBeginGetTransactionsForBudgetDelegate = new BeginOperationDelegate(this.OnBeginGetTransactionsForBudget);
            }
            if ((this.onEndGetTransactionsForBudgetDelegate == null)) {
                this.onEndGetTransactionsForBudgetDelegate = new EndOperationDelegate(this.OnEndGetTransactionsForBudget);
            }
            if ((this.onGetTransactionsForBudgetCompletedDelegate == null)) {
                this.onGetTransactionsForBudgetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTransactionsForBudgetCompleted);
            }
            base.InvokeAsync(this.onBeginGetTransactionsForBudgetDelegate, new object[] {
                        budgetId}, this.onEndGetTransactionsForBudgetDelegate, this.onGetTransactionsForBudgetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BMA_WP.BMAService.IMain.BeginGetImagesForTransaction(int transactionId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetImagesForTransaction(transactionId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.TransactionImage> BMA_WP.BMAService.IMain.EndGetImagesForTransaction(System.IAsyncResult result) {
            return base.Channel.EndGetImagesForTransaction(result);
        }
        
        private System.IAsyncResult OnBeginGetImagesForTransaction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int transactionId = ((int)(inValues[0]));
            return ((BMA_WP.BMAService.IMain)(this)).BeginGetImagesForTransaction(transactionId, callback, asyncState);
        }
        
        private object[] OnEndGetImagesForTransaction(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.TransactionImage> retVal = ((BMA_WP.BMAService.IMain)(this)).EndGetImagesForTransaction(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetImagesForTransactionCompleted(object state) {
            if ((this.GetImagesForTransactionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetImagesForTransactionCompleted(this, new GetImagesForTransactionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetImagesForTransactionAsync(int transactionId) {
            this.GetImagesForTransactionAsync(transactionId, null);
        }
        
        public void GetImagesForTransactionAsync(int transactionId, object userState) {
            if ((this.onBeginGetImagesForTransactionDelegate == null)) {
                this.onBeginGetImagesForTransactionDelegate = new BeginOperationDelegate(this.OnBeginGetImagesForTransaction);
            }
            if ((this.onEndGetImagesForTransactionDelegate == null)) {
                this.onEndGetImagesForTransactionDelegate = new EndOperationDelegate(this.OnEndGetImagesForTransaction);
            }
            if ((this.onGetImagesForTransactionCompletedDelegate == null)) {
                this.onGetImagesForTransactionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetImagesForTransactionCompleted);
            }
            base.InvokeAsync(this.onBeginGetImagesForTransactionDelegate, new object[] {
                        transactionId}, this.onEndGetImagesForTransactionDelegate, this.onGetImagesForTransactionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BMA_WP.BMAService.IMain.BeginGetAllBudgets(int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllBudgets(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> BMA_WP.BMAService.IMain.EndGetAllBudgets(System.IAsyncResult result) {
            return base.Channel.EndGetAllBudgets(result);
        }
        
        private System.IAsyncResult OnBeginGetAllBudgets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            return ((BMA_WP.BMAService.IMain)(this)).BeginGetAllBudgets(userId, callback, asyncState);
        }
        
        private object[] OnEndGetAllBudgets(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> retVal = ((BMA_WP.BMAService.IMain)(this)).EndGetAllBudgets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllBudgetsCompleted(object state) {
            if ((this.GetAllBudgetsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllBudgetsCompleted(this, new GetAllBudgetsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllBudgetsAsync(int userId) {
            this.GetAllBudgetsAsync(userId, null);
        }
        
        public void GetAllBudgetsAsync(int userId, object userState) {
            if ((this.onBeginGetAllBudgetsDelegate == null)) {
                this.onBeginGetAllBudgetsDelegate = new BeginOperationDelegate(this.OnBeginGetAllBudgets);
            }
            if ((this.onEndGetAllBudgetsDelegate == null)) {
                this.onEndGetAllBudgetsDelegate = new EndOperationDelegate(this.OnEndGetAllBudgets);
            }
            if ((this.onGetAllBudgetsCompletedDelegate == null)) {
                this.onGetAllBudgetsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllBudgetsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllBudgetsDelegate, new object[] {
                        userId}, this.onEndGetAllBudgetsDelegate, this.onGetAllBudgetsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BMA_WP.BMAService.IMain.BeginLoadItemCounts(int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadItemCounts(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BMA.BusinessLogic.StartupInfo BMA_WP.BMAService.IMain.EndLoadItemCounts(System.IAsyncResult result) {
            return base.Channel.EndLoadItemCounts(result);
        }
        
        private System.IAsyncResult OnBeginLoadItemCounts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            return ((BMA_WP.BMAService.IMain)(this)).BeginLoadItemCounts(userId, callback, asyncState);
        }
        
        private object[] OnEndLoadItemCounts(System.IAsyncResult result) {
            BMA.BusinessLogic.StartupInfo retVal = ((BMA_WP.BMAService.IMain)(this)).EndLoadItemCounts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadItemCountsCompleted(object state) {
            if ((this.LoadItemCountsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadItemCountsCompleted(this, new LoadItemCountsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadItemCountsAsync(int userId) {
            this.LoadItemCountsAsync(userId, null);
        }
        
        public void LoadItemCountsAsync(int userId, object userState) {
            if ((this.onBeginLoadItemCountsDelegate == null)) {
                this.onBeginLoadItemCountsDelegate = new BeginOperationDelegate(this.OnBeginLoadItemCounts);
            }
            if ((this.onEndLoadItemCountsDelegate == null)) {
                this.onEndLoadItemCountsDelegate = new EndOperationDelegate(this.OnEndLoadItemCounts);
            }
            if ((this.onLoadItemCountsCompletedDelegate == null)) {
                this.onLoadItemCountsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadItemCountsCompleted);
            }
            base.InvokeAsync(this.onBeginLoadItemCountsDelegate, new object[] {
                        userId}, this.onEndLoadItemCountsDelegate, this.onLoadItemCountsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BMA_WP.BMAService.IMain.BeginSyncTransactions(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> transactions, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSyncTransactions(transactions, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool BMA_WP.BMAService.IMain.EndSyncTransactions(System.IAsyncResult result) {
            return base.Channel.EndSyncTransactions(result);
        }
        
        private System.IAsyncResult OnBeginSyncTransactions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> transactions = ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction>)(inValues[0]));
            return ((BMA_WP.BMAService.IMain)(this)).BeginSyncTransactions(transactions, callback, asyncState);
        }
        
        private object[] OnEndSyncTransactions(System.IAsyncResult result) {
            bool retVal = ((BMA_WP.BMAService.IMain)(this)).EndSyncTransactions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSyncTransactionsCompleted(object state) {
            if ((this.SyncTransactionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SyncTransactionsCompleted(this, new SyncTransactionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SyncTransactionsAsync(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> transactions) {
            this.SyncTransactionsAsync(transactions, null);
        }
        
        public void SyncTransactionsAsync(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> transactions, object userState) {
            if ((this.onBeginSyncTransactionsDelegate == null)) {
                this.onBeginSyncTransactionsDelegate = new BeginOperationDelegate(this.OnBeginSyncTransactions);
            }
            if ((this.onEndSyncTransactionsDelegate == null)) {
                this.onEndSyncTransactionsDelegate = new EndOperationDelegate(this.OnEndSyncTransactions);
            }
            if ((this.onSyncTransactionsCompletedDelegate == null)) {
                this.onSyncTransactionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSyncTransactionsCompleted);
            }
            base.InvokeAsync(this.onBeginSyncTransactionsDelegate, new object[] {
                        transactions}, this.onEndSyncTransactionsDelegate, this.onSyncTransactionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BMA_WP.BMAService.IMain.BeginSyncBudgets(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> budgets, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSyncBudgets(budgets, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool BMA_WP.BMAService.IMain.EndSyncBudgets(System.IAsyncResult result) {
            return base.Channel.EndSyncBudgets(result);
        }
        
        private System.IAsyncResult OnBeginSyncBudgets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> budgets = ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget>)(inValues[0]));
            return ((BMA_WP.BMAService.IMain)(this)).BeginSyncBudgets(budgets, callback, asyncState);
        }
        
        private object[] OnEndSyncBudgets(System.IAsyncResult result) {
            bool retVal = ((BMA_WP.BMAService.IMain)(this)).EndSyncBudgets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSyncBudgetsCompleted(object state) {
            if ((this.SyncBudgetsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SyncBudgetsCompleted(this, new SyncBudgetsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SyncBudgetsAsync(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> budgets) {
            this.SyncBudgetsAsync(budgets, null);
        }
        
        public void SyncBudgetsAsync(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> budgets, object userState) {
            if ((this.onBeginSyncBudgetsDelegate == null)) {
                this.onBeginSyncBudgetsDelegate = new BeginOperationDelegate(this.OnBeginSyncBudgets);
            }
            if ((this.onEndSyncBudgetsDelegate == null)) {
                this.onEndSyncBudgetsDelegate = new EndOperationDelegate(this.OnEndSyncBudgets);
            }
            if ((this.onSyncBudgetsCompletedDelegate == null)) {
                this.onSyncBudgetsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSyncBudgetsCompleted);
            }
            base.InvokeAsync(this.onBeginSyncBudgetsDelegate, new object[] {
                        budgets}, this.onEndSyncBudgetsDelegate, this.onSyncBudgetsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BMA_WP.BMAService.IMain.BeginSaveTransactions(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> transactions, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveTransactions(transactions, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> BMA_WP.BMAService.IMain.EndSaveTransactions(System.IAsyncResult result) {
            return base.Channel.EndSaveTransactions(result);
        }
        
        private System.IAsyncResult OnBeginSaveTransactions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> transactions = ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction>)(inValues[0]));
            return ((BMA_WP.BMAService.IMain)(this)).BeginSaveTransactions(transactions, callback, asyncState);
        }
        
        private object[] OnEndSaveTransactions(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> retVal = ((BMA_WP.BMAService.IMain)(this)).EndSaveTransactions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveTransactionsCompleted(object state) {
            if ((this.SaveTransactionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveTransactionsCompleted(this, new SaveTransactionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveTransactionsAsync(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> transactions) {
            this.SaveTransactionsAsync(transactions, null);
        }
        
        public void SaveTransactionsAsync(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> transactions, object userState) {
            if ((this.onBeginSaveTransactionsDelegate == null)) {
                this.onBeginSaveTransactionsDelegate = new BeginOperationDelegate(this.OnBeginSaveTransactions);
            }
            if ((this.onEndSaveTransactionsDelegate == null)) {
                this.onEndSaveTransactionsDelegate = new EndOperationDelegate(this.OnEndSaveTransactions);
            }
            if ((this.onSaveTransactionsCompletedDelegate == null)) {
                this.onSaveTransactionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveTransactionsCompleted);
            }
            base.InvokeAsync(this.onBeginSaveTransactionsDelegate, new object[] {
                        transactions}, this.onEndSaveTransactionsDelegate, this.onSaveTransactionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BMA_WP.BMAService.IMain.BeginSaveBudgets(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> budgets, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveBudgets(budgets, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> BMA_WP.BMAService.IMain.EndSaveBudgets(System.IAsyncResult result) {
            return base.Channel.EndSaveBudgets(result);
        }
        
        private System.IAsyncResult OnBeginSaveBudgets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> budgets = ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget>)(inValues[0]));
            return ((BMA_WP.BMAService.IMain)(this)).BeginSaveBudgets(budgets, callback, asyncState);
        }
        
        private object[] OnEndSaveBudgets(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> retVal = ((BMA_WP.BMAService.IMain)(this)).EndSaveBudgets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveBudgetsCompleted(object state) {
            if ((this.SaveBudgetsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveBudgetsCompleted(this, new SaveBudgetsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveBudgetsAsync(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> budgets) {
            this.SaveBudgetsAsync(budgets, null);
        }
        
        public void SaveBudgetsAsync(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> budgets, object userState) {
            if ((this.onBeginSaveBudgetsDelegate == null)) {
                this.onBeginSaveBudgetsDelegate = new BeginOperationDelegate(this.OnBeginSaveBudgets);
            }
            if ((this.onEndSaveBudgetsDelegate == null)) {
                this.onEndSaveBudgetsDelegate = new EndOperationDelegate(this.OnEndSaveBudgets);
            }
            if ((this.onSaveBudgetsCompletedDelegate == null)) {
                this.onSaveBudgetsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveBudgetsCompleted);
            }
            base.InvokeAsync(this.onBeginSaveBudgetsDelegate, new object[] {
                        budgets}, this.onEndSaveBudgetsDelegate, this.onSaveBudgetsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BMA_WP.BMAService.IMain.BeginSaveTransactionImages(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.TransactionImage> transactionImages, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveTransactionImages(transactionImages, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool BMA_WP.BMAService.IMain.EndSaveTransactionImages(System.IAsyncResult result) {
            return base.Channel.EndSaveTransactionImages(result);
        }
        
        private System.IAsyncResult OnBeginSaveTransactionImages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.TransactionImage> transactionImages = ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.TransactionImage>)(inValues[0]));
            return ((BMA_WP.BMAService.IMain)(this)).BeginSaveTransactionImages(transactionImages, callback, asyncState);
        }
        
        private object[] OnEndSaveTransactionImages(System.IAsyncResult result) {
            bool retVal = ((BMA_WP.BMAService.IMain)(this)).EndSaveTransactionImages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveTransactionImagesCompleted(object state) {
            if ((this.SaveTransactionImagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveTransactionImagesCompleted(this, new SaveTransactionImagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveTransactionImagesAsync(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.TransactionImage> transactionImages) {
            this.SaveTransactionImagesAsync(transactionImages, null);
        }
        
        public void SaveTransactionImagesAsync(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.TransactionImage> transactionImages, object userState) {
            if ((this.onBeginSaveTransactionImagesDelegate == null)) {
                this.onBeginSaveTransactionImagesDelegate = new BeginOperationDelegate(this.OnBeginSaveTransactionImages);
            }
            if ((this.onEndSaveTransactionImagesDelegate == null)) {
                this.onEndSaveTransactionImagesDelegate = new EndOperationDelegate(this.OnEndSaveTransactionImages);
            }
            if ((this.onSaveTransactionImagesCompletedDelegate == null)) {
                this.onSaveTransactionImagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveTransactionImagesCompleted);
            }
            base.InvokeAsync(this.onBeginSaveTransactionImagesDelegate, new object[] {
                        transactionImages}, this.onEndSaveTransactionImagesDelegate, this.onSaveTransactionImagesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BMA_WP.BMAService.IMain.BeginReportTransactionAmount(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, double amountFrom, double amountTo, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReportTransactionAmount(dateFrom, dateTo, transTypeId, amountFrom, amountTo, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> BMA_WP.BMAService.IMain.EndReportTransactionAmount(System.IAsyncResult result) {
            return base.Channel.EndReportTransactionAmount(result);
        }
        
        private System.IAsyncResult OnBeginReportTransactionAmount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime dateFrom = ((System.DateTime)(inValues[0]));
            System.DateTime dateTo = ((System.DateTime)(inValues[1]));
            int transTypeId = ((int)(inValues[2]));
            double amountFrom = ((double)(inValues[3]));
            double amountTo = ((double)(inValues[4]));
            int userId = ((int)(inValues[5]));
            return ((BMA_WP.BMAService.IMain)(this)).BeginReportTransactionAmount(dateFrom, dateTo, transTypeId, amountFrom, amountTo, userId, callback, asyncState);
        }
        
        private object[] OnEndReportTransactionAmount(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> retVal = ((BMA_WP.BMAService.IMain)(this)).EndReportTransactionAmount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReportTransactionAmountCompleted(object state) {
            if ((this.ReportTransactionAmountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReportTransactionAmountCompleted(this, new ReportTransactionAmountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReportTransactionAmountAsync(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, double amountFrom, double amountTo, int userId) {
            this.ReportTransactionAmountAsync(dateFrom, dateTo, transTypeId, amountFrom, amountTo, userId, null);
        }
        
        public void ReportTransactionAmountAsync(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, double amountFrom, double amountTo, int userId, object userState) {
            if ((this.onBeginReportTransactionAmountDelegate == null)) {
                this.onBeginReportTransactionAmountDelegate = new BeginOperationDelegate(this.OnBeginReportTransactionAmount);
            }
            if ((this.onEndReportTransactionAmountDelegate == null)) {
                this.onEndReportTransactionAmountDelegate = new EndOperationDelegate(this.OnEndReportTransactionAmount);
            }
            if ((this.onReportTransactionAmountCompletedDelegate == null)) {
                this.onReportTransactionAmountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReportTransactionAmountCompleted);
            }
            base.InvokeAsync(this.onBeginReportTransactionAmountDelegate, new object[] {
                        dateFrom,
                        dateTo,
                        transTypeId,
                        amountFrom,
                        amountTo,
                        userId}, this.onEndReportTransactionAmountDelegate, this.onReportTransactionAmountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BMA_WP.BMAService.IMain.BeginReportTransactionCategory(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReportTransactionCategory(dateFrom, dateTo, transTypeId, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<BMA.BusinessLogic.Category, double> BMA_WP.BMAService.IMain.EndReportTransactionCategory(System.IAsyncResult result) {
            return base.Channel.EndReportTransactionCategory(result);
        }
        
        private System.IAsyncResult OnBeginReportTransactionCategory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime dateFrom = ((System.DateTime)(inValues[0]));
            System.DateTime dateTo = ((System.DateTime)(inValues[1]));
            int transTypeId = ((int)(inValues[2]));
            int userId = ((int)(inValues[3]));
            return ((BMA_WP.BMAService.IMain)(this)).BeginReportTransactionCategory(dateFrom, dateTo, transTypeId, userId, callback, asyncState);
        }
        
        private object[] OnEndReportTransactionCategory(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<BMA.BusinessLogic.Category, double> retVal = ((BMA_WP.BMAService.IMain)(this)).EndReportTransactionCategory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReportTransactionCategoryCompleted(object state) {
            if ((this.ReportTransactionCategoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReportTransactionCategoryCompleted(this, new ReportTransactionCategoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReportTransactionCategoryAsync(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, int userId) {
            this.ReportTransactionCategoryAsync(dateFrom, dateTo, transTypeId, userId, null);
        }
        
        public void ReportTransactionCategoryAsync(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, int userId, object userState) {
            if ((this.onBeginReportTransactionCategoryDelegate == null)) {
                this.onBeginReportTransactionCategoryDelegate = new BeginOperationDelegate(this.OnBeginReportTransactionCategory);
            }
            if ((this.onEndReportTransactionCategoryDelegate == null)) {
                this.onEndReportTransactionCategoryDelegate = new EndOperationDelegate(this.OnEndReportTransactionCategory);
            }
            if ((this.onReportTransactionCategoryCompletedDelegate == null)) {
                this.onReportTransactionCategoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReportTransactionCategoryCompleted);
            }
            base.InvokeAsync(this.onBeginReportTransactionCategoryDelegate, new object[] {
                        dateFrom,
                        dateTo,
                        transTypeId,
                        userId}, this.onEndReportTransactionCategoryDelegate, this.onReportTransactionCategoryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BMA_WP.BMAService.IMain.BeginReportTransactionReason(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReportTransactionReason(dateFrom, dateTo, transTypeId, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<BMA.BusinessLogic.TypeTransactionReason, double> BMA_WP.BMAService.IMain.EndReportTransactionReason(System.IAsyncResult result) {
            return base.Channel.EndReportTransactionReason(result);
        }
        
        private System.IAsyncResult OnBeginReportTransactionReason(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime dateFrom = ((System.DateTime)(inValues[0]));
            System.DateTime dateTo = ((System.DateTime)(inValues[1]));
            int transTypeId = ((int)(inValues[2]));
            int userId = ((int)(inValues[3]));
            return ((BMA_WP.BMAService.IMain)(this)).BeginReportTransactionReason(dateFrom, dateTo, transTypeId, userId, callback, asyncState);
        }
        
        private object[] OnEndReportTransactionReason(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<BMA.BusinessLogic.TypeTransactionReason, double> retVal = ((BMA_WP.BMAService.IMain)(this)).EndReportTransactionReason(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReportTransactionReasonCompleted(object state) {
            if ((this.ReportTransactionReasonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReportTransactionReasonCompleted(this, new ReportTransactionReasonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReportTransactionReasonAsync(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, int userId) {
            this.ReportTransactionReasonAsync(dateFrom, dateTo, transTypeId, userId, null);
        }
        
        public void ReportTransactionReasonAsync(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, int userId, object userState) {
            if ((this.onBeginReportTransactionReasonDelegate == null)) {
                this.onBeginReportTransactionReasonDelegate = new BeginOperationDelegate(this.OnBeginReportTransactionReason);
            }
            if ((this.onEndReportTransactionReasonDelegate == null)) {
                this.onEndReportTransactionReasonDelegate = new EndOperationDelegate(this.OnEndReportTransactionReason);
            }
            if ((this.onReportTransactionReasonCompletedDelegate == null)) {
                this.onReportTransactionReasonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReportTransactionReasonCompleted);
            }
            base.InvokeAsync(this.onBeginReportTransactionReasonDelegate, new object[] {
                        dateFrom,
                        dateTo,
                        transTypeId,
                        userId}, this.onEndReportTransactionReasonDelegate, this.onReportTransactionReasonCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BMA_WP.BMAService.IMain.BeginReportTransactionBudget(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReportTransactionBudget(dateFrom, dateTo, transTypeId, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> BMA_WP.BMAService.IMain.EndReportTransactionBudget(System.IAsyncResult result) {
            return base.Channel.EndReportTransactionBudget(result);
        }
        
        private System.IAsyncResult OnBeginReportTransactionBudget(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime dateFrom = ((System.DateTime)(inValues[0]));
            System.DateTime dateTo = ((System.DateTime)(inValues[1]));
            int transTypeId = ((int)(inValues[2]));
            int userId = ((int)(inValues[3]));
            return ((BMA_WP.BMAService.IMain)(this)).BeginReportTransactionBudget(dateFrom, dateTo, transTypeId, userId, callback, asyncState);
        }
        
        private object[] OnEndReportTransactionBudget(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> retVal = ((BMA_WP.BMAService.IMain)(this)).EndReportTransactionBudget(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReportTransactionBudgetCompleted(object state) {
            if ((this.ReportTransactionBudgetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReportTransactionBudgetCompleted(this, new ReportTransactionBudgetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReportTransactionBudgetAsync(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, int userId) {
            this.ReportTransactionBudgetAsync(dateFrom, dateTo, transTypeId, userId, null);
        }
        
        public void ReportTransactionBudgetAsync(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, int userId, object userState) {
            if ((this.onBeginReportTransactionBudgetDelegate == null)) {
                this.onBeginReportTransactionBudgetDelegate = new BeginOperationDelegate(this.OnBeginReportTransactionBudget);
            }
            if ((this.onEndReportTransactionBudgetDelegate == null)) {
                this.onEndReportTransactionBudgetDelegate = new EndOperationDelegate(this.OnEndReportTransactionBudget);
            }
            if ((this.onReportTransactionBudgetCompletedDelegate == null)) {
                this.onReportTransactionBudgetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReportTransactionBudgetCompleted);
            }
            base.InvokeAsync(this.onBeginReportTransactionBudgetDelegate, new object[] {
                        dateFrom,
                        dateTo,
                        transTypeId,
                        userId}, this.onEndReportTransactionBudgetDelegate, this.onReportTransactionBudgetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BMA_WP.BMAService.IMain.BeginReportTransactionNameOfPlace(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReportTransactionNameOfPlace(dateFrom, dateTo, transTypeId, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, double> BMA_WP.BMAService.IMain.EndReportTransactionNameOfPlace(System.IAsyncResult result) {
            return base.Channel.EndReportTransactionNameOfPlace(result);
        }
        
        private System.IAsyncResult OnBeginReportTransactionNameOfPlace(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime dateFrom = ((System.DateTime)(inValues[0]));
            System.DateTime dateTo = ((System.DateTime)(inValues[1]));
            int transTypeId = ((int)(inValues[2]));
            int userId = ((int)(inValues[3]));
            return ((BMA_WP.BMAService.IMain)(this)).BeginReportTransactionNameOfPlace(dateFrom, dateTo, transTypeId, userId, callback, asyncState);
        }
        
        private object[] OnEndReportTransactionNameOfPlace(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, double> retVal = ((BMA_WP.BMAService.IMain)(this)).EndReportTransactionNameOfPlace(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReportTransactionNameOfPlaceCompleted(object state) {
            if ((this.ReportTransactionNameOfPlaceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReportTransactionNameOfPlaceCompleted(this, new ReportTransactionNameOfPlaceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReportTransactionNameOfPlaceAsync(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, int userId) {
            this.ReportTransactionNameOfPlaceAsync(dateFrom, dateTo, transTypeId, userId, null);
        }
        
        public void ReportTransactionNameOfPlaceAsync(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, int userId, object userState) {
            if ((this.onBeginReportTransactionNameOfPlaceDelegate == null)) {
                this.onBeginReportTransactionNameOfPlaceDelegate = new BeginOperationDelegate(this.OnBeginReportTransactionNameOfPlace);
            }
            if ((this.onEndReportTransactionNameOfPlaceDelegate == null)) {
                this.onEndReportTransactionNameOfPlaceDelegate = new EndOperationDelegate(this.OnEndReportTransactionNameOfPlace);
            }
            if ((this.onReportTransactionNameOfPlaceCompletedDelegate == null)) {
                this.onReportTransactionNameOfPlaceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReportTransactionNameOfPlaceCompleted);
            }
            base.InvokeAsync(this.onBeginReportTransactionNameOfPlaceDelegate, new object[] {
                        dateFrom,
                        dateTo,
                        transTypeId,
                        userId}, this.onEndReportTransactionNameOfPlaceDelegate, this.onReportTransactionNameOfPlaceCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override BMA_WP.BMAService.IMain CreateChannel() {
            return new MainClientChannel(this);
        }
        
        private class MainClientChannel : ChannelBase<BMA_WP.BMAService.IMain>, BMA_WP.BMAService.IMain {
            
            public MainClientChannel(System.ServiceModel.ClientBase<BMA_WP.BMAService.IMain> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetDBStatus(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetDBStatus", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndGetDBStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("GetDBStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLatestTransactionDate(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetLatestTransactionDate", _args, callback, asyncState);
                return _result;
            }
            
            public System.DateTime EndGetLatestTransactionDate(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.DateTime _result = ((System.DateTime)(base.EndInvoke("GetLatestTransactionDate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLatestTransactionDateDouble(int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("GetLatestTransactionDateDouble", _args, callback, asyncState);
                return _result;
            }
            
            public double EndGetLatestTransactionDateDouble(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("GetLatestTransactionDateDouble", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllTransactions(int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("GetAllTransactions", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> EndGetAllTransactions(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> _result = ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction>)(base.EndInvoke("GetAllTransactions", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLatestTransactions(int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("GetLatestTransactions", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> EndGetLatestTransactions(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> _result = ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction>)(base.EndInvoke("GetLatestTransactions", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLatestTransactionsOnDate(int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("GetLatestTransactionsOnDate", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> EndGetLatestTransactionsOnDate(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> _result = ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction>)(base.EndInvoke("GetLatestTransactionsOnDate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLatestTransactionsLimit(int latestRecs, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = latestRecs;
                _args[1] = userId;
                System.IAsyncResult _result = base.BeginInvoke("GetLatestTransactionsLimit", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> EndGetLatestTransactionsLimit(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> _result = ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction>)(base.EndInvoke("GetLatestTransactionsLimit", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTransactionsForBudget(int budgetId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = budgetId;
                System.IAsyncResult _result = base.BeginInvoke("GetTransactionsForBudget", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> EndGetTransactionsForBudget(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> _result = ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction>)(base.EndInvoke("GetTransactionsForBudget", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetImagesForTransaction(int transactionId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = transactionId;
                System.IAsyncResult _result = base.BeginInvoke("GetImagesForTransaction", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.TransactionImage> EndGetImagesForTransaction(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.TransactionImage> _result = ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.TransactionImage>)(base.EndInvoke("GetImagesForTransaction", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllBudgets(int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("GetAllBudgets", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> EndGetAllBudgets(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> _result = ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget>)(base.EndInvoke("GetAllBudgets", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLoadItemCounts(int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("LoadItemCounts", _args, callback, asyncState);
                return _result;
            }
            
            public BMA.BusinessLogic.StartupInfo EndLoadItemCounts(System.IAsyncResult result) {
                object[] _args = new object[0];
                BMA.BusinessLogic.StartupInfo _result = ((BMA.BusinessLogic.StartupInfo)(base.EndInvoke("LoadItemCounts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSyncTransactions(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> transactions, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = transactions;
                System.IAsyncResult _result = base.BeginInvoke("SyncTransactions", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSyncTransactions(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SyncTransactions", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSyncBudgets(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> budgets, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = budgets;
                System.IAsyncResult _result = base.BeginInvoke("SyncBudgets", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSyncBudgets(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SyncBudgets", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveTransactions(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> transactions, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = transactions;
                System.IAsyncResult _result = base.BeginInvoke("SaveTransactions", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> EndSaveTransactions(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> _result = ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction>)(base.EndInvoke("SaveTransactions", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveBudgets(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> budgets, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = budgets;
                System.IAsyncResult _result = base.BeginInvoke("SaveBudgets", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> EndSaveBudgets(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> _result = ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget>)(base.EndInvoke("SaveBudgets", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveTransactionImages(System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.TransactionImage> transactionImages, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = transactionImages;
                System.IAsyncResult _result = base.BeginInvoke("SaveTransactionImages", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSaveTransactionImages(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SaveTransactionImages", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReportTransactionAmount(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, double amountFrom, double amountTo, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = dateFrom;
                _args[1] = dateTo;
                _args[2] = transTypeId;
                _args[3] = amountFrom;
                _args[4] = amountTo;
                _args[5] = userId;
                System.IAsyncResult _result = base.BeginInvoke("ReportTransactionAmount", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> EndReportTransactionAmount(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction> _result = ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Transaction>)(base.EndInvoke("ReportTransactionAmount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReportTransactionCategory(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = dateFrom;
                _args[1] = dateTo;
                _args[2] = transTypeId;
                _args[3] = userId;
                System.IAsyncResult _result = base.BeginInvoke("ReportTransactionCategory", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<BMA.BusinessLogic.Category, double> EndReportTransactionCategory(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<BMA.BusinessLogic.Category, double> _result = ((System.Collections.Generic.Dictionary<BMA.BusinessLogic.Category, double>)(base.EndInvoke("ReportTransactionCategory", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReportTransactionReason(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = dateFrom;
                _args[1] = dateTo;
                _args[2] = transTypeId;
                _args[3] = userId;
                System.IAsyncResult _result = base.BeginInvoke("ReportTransactionReason", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<BMA.BusinessLogic.TypeTransactionReason, double> EndReportTransactionReason(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<BMA.BusinessLogic.TypeTransactionReason, double> _result = ((System.Collections.Generic.Dictionary<BMA.BusinessLogic.TypeTransactionReason, double>)(base.EndInvoke("ReportTransactionReason", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReportTransactionBudget(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = dateFrom;
                _args[1] = dateTo;
                _args[2] = transTypeId;
                _args[3] = userId;
                System.IAsyncResult _result = base.BeginInvoke("ReportTransactionBudget", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> EndReportTransactionBudget(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget> _result = ((System.Collections.ObjectModel.ObservableCollection<BMA.BusinessLogic.Budget>)(base.EndInvoke("ReportTransactionBudget", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReportTransactionNameOfPlace(System.DateTime dateFrom, System.DateTime dateTo, int transTypeId, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = dateFrom;
                _args[1] = dateTo;
                _args[2] = transTypeId;
                _args[3] = userId;
                System.IAsyncResult _result = base.BeginInvoke("ReportTransactionNameOfPlace", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, double> EndReportTransactionNameOfPlace(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, double> _result = ((System.Collections.Generic.Dictionary<string, double>)(base.EndInvoke("ReportTransactionNameOfPlace", _args, result)));
                return _result;
            }
        }
    }
}
