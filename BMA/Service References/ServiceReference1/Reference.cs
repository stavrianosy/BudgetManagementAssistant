//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 11.0.50727.1
// 
namespace BMA.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ingredient", Namespace="http://schemas.datacontract.org/2004/07/CakePromo.BusinessLogic")]
    public partial class Ingredient : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<BMA.ServiceReference1.Cake> CakeField;
        
        private int IngredientIDField;
        
        private string NameField;
        
        private double QuantityField;
        
        private System.DateTime TimeStampField;
        
        private BMA.ServiceReference1.Unit UnitField;
        
        private BMA.ServiceReference1.User UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<BMA.ServiceReference1.Cake> Cake {
            get {
                return this.CakeField;
            }
            set {
                if ((object.ReferenceEquals(this.CakeField, value) != true)) {
                    this.CakeField = value;
                    this.RaisePropertyChanged("Cake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IngredientID {
            get {
                return this.IngredientIDField;
            }
            set {
                if ((this.IngredientIDField.Equals(value) != true)) {
                    this.IngredientIDField = value;
                    this.RaisePropertyChanged("IngredientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BMA.ServiceReference1.Unit Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BMA.ServiceReference1.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Unit", Namespace="http://schemas.datacontract.org/2004/07/CakePromo.BusinessLogic")]
    public partial class Unit : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        private string ShortNameField;
        
        private System.DateTime TimeStampField;
        
        private int UnitIDField;
        
        private BMA.ServiceReference1.User UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnitID {
            get {
                return this.UnitIDField;
            }
            set {
                if ((this.UnitIDField.Equals(value) != true)) {
                    this.UnitIDField = value;
                    this.RaisePropertyChanged("UnitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BMA.ServiceReference1.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/CakePromo.BusinessLogic")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<BMA.ServiceReference1.Contact> ContactField;
        
        private BMA.ServiceReference1.Personal PersonalField;
        
        private System.DateTime TimeStampField;
        
        private int UserIDField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<BMA.ServiceReference1.Contact> Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BMA.ServiceReference1.Personal Personal {
            get {
                return this.PersonalField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonalField, value) != true)) {
                    this.PersonalField = value;
                    this.RaisePropertyChanged("Personal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cake", Namespace="http://schemas.datacontract.org/2004/07/CakePromo.BusinessLogic")]
    public partial class Cake : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CakeIDField;
        
        private System.Collections.ObjectModel.ObservableCollection<BMA.ServiceReference1.CakePhoto> CakePhotoField;
        
        private System.Collections.ObjectModel.ObservableCollection<BMA.ServiceReference1.Ingredient> IngredientField;
        
        private string NameField;
        
        private System.Collections.ObjectModel.ObservableCollection<BMA.ServiceReference1.Rate> RateField;
        
        private string RecipieField;
        
        private System.DateTime TimeStampField;
        
        private BMA.ServiceReference1.User UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CakeID {
            get {
                return this.CakeIDField;
            }
            set {
                if ((this.CakeIDField.Equals(value) != true)) {
                    this.CakeIDField = value;
                    this.RaisePropertyChanged("CakeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<BMA.ServiceReference1.CakePhoto> CakePhoto {
            get {
                return this.CakePhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.CakePhotoField, value) != true)) {
                    this.CakePhotoField = value;
                    this.RaisePropertyChanged("CakePhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<BMA.ServiceReference1.Ingredient> Ingredient {
            get {
                return this.IngredientField;
            }
            set {
                if ((object.ReferenceEquals(this.IngredientField, value) != true)) {
                    this.IngredientField = value;
                    this.RaisePropertyChanged("Ingredient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<BMA.ServiceReference1.Rate> Rate {
            get {
                return this.RateField;
            }
            set {
                if ((object.ReferenceEquals(this.RateField, value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Recipie {
            get {
                return this.RecipieField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipieField, value) != true)) {
                    this.RecipieField = value;
                    this.RaisePropertyChanged("Recipie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BMA.ServiceReference1.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CakePhoto", Namespace="http://schemas.datacontract.org/2004/07/CakePromo.BusinessLogic")]
    public partial class CakePhoto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CakePhotoIDField;
        
        private string PhotoURL_LargeField;
        
        private string PhotoURL_SmallField;
        
        private System.DateTime TimeStampField;
        
        private BMA.ServiceReference1.User UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CakePhotoID {
            get {
                return this.CakePhotoIDField;
            }
            set {
                if ((this.CakePhotoIDField.Equals(value) != true)) {
                    this.CakePhotoIDField = value;
                    this.RaisePropertyChanged("CakePhotoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoURL_Large {
            get {
                return this.PhotoURL_LargeField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoURL_LargeField, value) != true)) {
                    this.PhotoURL_LargeField = value;
                    this.RaisePropertyChanged("PhotoURL_Large");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoURL_Small {
            get {
                return this.PhotoURL_SmallField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoURL_SmallField, value) != true)) {
                    this.PhotoURL_SmallField = value;
                    this.RaisePropertyChanged("PhotoURL_Small");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BMA.ServiceReference1.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rate", Namespace="http://schemas.datacontract.org/2004/07/CakePromo.BusinessLogic")]
    public partial class Rate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CommentsField;
        
        private int DesignField;
        
        private int FacilitateField;
        
        private int RateIDField;
        
        private int TasteField;
        
        private System.DateTime TimeStampField;
        
        private BMA.ServiceReference1.User UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Design {
            get {
                return this.DesignField;
            }
            set {
                if ((this.DesignField.Equals(value) != true)) {
                    this.DesignField = value;
                    this.RaisePropertyChanged("Design");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Facilitate {
            get {
                return this.FacilitateField;
            }
            set {
                if ((this.FacilitateField.Equals(value) != true)) {
                    this.FacilitateField = value;
                    this.RaisePropertyChanged("Facilitate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RateID {
            get {
                return this.RateIDField;
            }
            set {
                if ((this.RateIDField.Equals(value) != true)) {
                    this.RateIDField = value;
                    this.RaisePropertyChanged("RateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Taste {
            get {
                return this.TasteField;
            }
            set {
                if ((this.TasteField.Equals(value) != true)) {
                    this.TasteField = value;
                    this.RaisePropertyChanged("Taste");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BMA.ServiceReference1.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Personal", Namespace="http://schemas.datacontract.org/2004/07/CakePromo.BusinessLogic")]
    public partial class Personal : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int BirthdateField;
        
        private int NameField;
        
        private int PersonalIDField;
        
        private int SurnameField;
        
        private int TimeStampField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Birthdate {
            get {
                return this.BirthdateField;
            }
            set {
                if ((this.BirthdateField.Equals(value) != true)) {
                    this.BirthdateField = value;
                    this.RaisePropertyChanged("Birthdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Name {
            get {
                return this.NameField;
            }
            set {
                if ((this.NameField.Equals(value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonalID {
            get {
                return this.PersonalIDField;
            }
            set {
                if ((this.PersonalIDField.Equals(value) != true)) {
                    this.PersonalIDField = value;
                    this.RaisePropertyChanged("PersonalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((this.SurnameField.Equals(value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contact", Namespace="http://schemas.datacontract.org/2004/07/CakePromo.BusinessLogic")]
    public partial class Contact : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AddressField;
        
        private int ContactIDField;
        
        private int EmailField;
        
        private int TimeStampField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Address {
            get {
                return this.AddressField;
            }
            set {
                if ((this.AddressField.Equals(value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactID {
            get {
                return this.ContactIDField;
            }
            set {
                if ((this.ContactIDField.Equals(value) != true)) {
                    this.ContactIDField = value;
                    this.RaisePropertyChanged("ContactID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Email {
            get {
                return this.EmailField;
            }
            set {
                if ((this.EmailField.Equals(value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMain")]
    public interface IMain {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetAllCakesEager", ReplyAction="http://tempuri.org/IMain/GetAllCakesEagerResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BMA.ServiceReference1.Ingredient))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<BMA.ServiceReference1.Cake>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BMA.ServiceReference1.Cake))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<BMA.ServiceReference1.CakePhoto>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BMA.ServiceReference1.CakePhoto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BMA.ServiceReference1.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<BMA.ServiceReference1.Contact>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BMA.ServiceReference1.Contact))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BMA.ServiceReference1.Personal))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<BMA.ServiceReference1.Ingredient>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<BMA.ServiceReference1.Rate>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BMA.ServiceReference1.Rate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BMA.ServiceReference1.Unit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<object>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<object>>> GetAllCakesEagerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetCakeByID", ReplyAction="http://tempuri.org/IMain/GetCakeByIDResponse")]
        System.Threading.Tasks.Task<BMA.ServiceReference1.Cake> GetCakeByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetIngredientsByCakeID", ReplyAction="http://tempuri.org/IMain/GetIngredientsByCakeIDResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<BMA.ServiceReference1.Ingredient>> GetIngredientsByCakeIDAsync(int CakeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetAllCakes", ReplyAction="http://tempuri.org/IMain/GetAllCakesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<BMA.ServiceReference1.Cake>> GetAllCakesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainChannel : BMA.ServiceReference1.IMain, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainClient : System.ServiceModel.ClientBase<BMA.ServiceReference1.IMain>, BMA.ServiceReference1.IMain {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MainClient() : 
                base(MainClient.GetDefaultBinding(), MainClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IMain.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MainClient(EndpointConfiguration endpointConfiguration) : 
                base(MainClient.GetBindingForEndpoint(endpointConfiguration), MainClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MainClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MainClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MainClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MainClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MainClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<System.Collections.ObjectModel.ObservableCollection<object>>> GetAllCakesEagerAsync() {
            return base.Channel.GetAllCakesEagerAsync();
        }
        
        public System.Threading.Tasks.Task<BMA.ServiceReference1.Cake> GetCakeByIDAsync(int id) {
            return base.Channel.GetCakeByIDAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<BMA.ServiceReference1.Ingredient>> GetIngredientsByCakeIDAsync(int CakeID) {
            return base.Channel.GetIngredientsByCakeIDAsync(CakeID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<BMA.ServiceReference1.Cake>> GetAllCakesAsync() {
            return base.Channel.GetAllCakesAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMain)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMain)) {
                return new System.ServiceModel.EndpointAddress("http://mediapc/CakePromoService/CakePromoService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return MainClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IMain);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return MainClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IMain);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IMain,
        }
    }
}
