//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication1.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMain")]
    public interface IMain {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetAllTransactions", ReplyAction="http://tempuri.org/IMain/GetAllTransactionsResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.Transaction> GetAllTransactions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetAllTransactions", ReplyAction="http://tempuri.org/IMain/GetAllTransactionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Transaction>> GetAllTransactionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetLatestTransactions", ReplyAction="http://tempuri.org/IMain/GetLatestTransactionsResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.Transaction> GetLatestTransactions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetLatestTransactions", ReplyAction="http://tempuri.org/IMain/GetLatestTransactionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Transaction>> GetLatestTransactionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetLatestTransactionsLimit", ReplyAction="http://tempuri.org/IMain/GetLatestTransactionsLimitResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.Transaction> GetLatestTransactionsLimit(int latestRecs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetLatestTransactionsLimit", ReplyAction="http://tempuri.org/IMain/GetLatestTransactionsLimitResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Transaction>> GetLatestTransactionsLimitAsync(int latestRecs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetTransactionsForBudget", ReplyAction="http://tempuri.org/IMain/GetTransactionsForBudgetResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.Transaction> GetTransactionsForBudget(int budgetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetTransactionsForBudget", ReplyAction="http://tempuri.org/IMain/GetTransactionsForBudgetResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Transaction>> GetTransactionsForBudgetAsync(int budgetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetAllBudgets", ReplyAction="http://tempuri.org/IMain/GetAllBudgetsResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.Budget> GetAllBudgets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetAllBudgets", ReplyAction="http://tempuri.org/IMain/GetAllBudgetsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Budget>> GetAllBudgetsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetAllTypeTransactions", ReplyAction="http://tempuri.org/IMain/GetAllTypeTransactionsResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.TypeTransaction> GetAllTypeTransactions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetAllTypeTransactions", ReplyAction="http://tempuri.org/IMain/GetAllTypeTransactionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.TypeTransaction>> GetAllTypeTransactionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/LoadItemCounts", ReplyAction="http://tempuri.org/IMain/LoadItemCountsResponse")]
        BMA.BusinessLogic.StartupInfo LoadItemCounts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/LoadItemCounts", ReplyAction="http://tempuri.org/IMain/LoadItemCountsResponse")]
        System.Threading.Tasks.Task<BMA.BusinessLogic.StartupInfo> LoadItemCountsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/SaveTransactions", ReplyAction="http://tempuri.org/IMain/SaveTransactionsResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.Transaction> SaveTransactions(System.Collections.Generic.List<BMA.BusinessLogic.Transaction> transactions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/SaveTransactions", ReplyAction="http://tempuri.org/IMain/SaveTransactionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Transaction>> SaveTransactionsAsync(System.Collections.Generic.List<BMA.BusinessLogic.Transaction> transactions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/SyncTransactions", ReplyAction="http://tempuri.org/IMain/SyncTransactionsResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.Transaction> SyncTransactions(System.Collections.Generic.List<BMA.BusinessLogic.Transaction> transactions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/SyncTransactions", ReplyAction="http://tempuri.org/IMain/SyncTransactionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Transaction>> SyncTransactionsAsync(System.Collections.Generic.List<BMA.BusinessLogic.Transaction> transactions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/SaveBudgets", ReplyAction="http://tempuri.org/IMain/SaveBudgetsResponse")]
        System.Collections.Generic.List<BMA.BusinessLogic.Budget> SaveBudgets(System.Collections.Generic.List<BMA.BusinessLogic.Budget> transactions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/SaveBudgets", ReplyAction="http://tempuri.org/IMain/SaveBudgetsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Budget>> SaveBudgetsAsync(System.Collections.Generic.List<BMA.BusinessLogic.Budget> transactions);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainChannel : ConsoleApplication1.ServiceReference1.IMain, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainClient : System.ServiceModel.ClientBase<ConsoleApplication1.ServiceReference1.IMain>, ConsoleApplication1.ServiceReference1.IMain {
        
        public MainClient() {
        }
        
        public MainClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MainClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.Transaction> GetAllTransactions() {
            return base.Channel.GetAllTransactions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Transaction>> GetAllTransactionsAsync() {
            return base.Channel.GetAllTransactionsAsync();
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.Transaction> GetLatestTransactions() {
            return base.Channel.GetLatestTransactions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Transaction>> GetLatestTransactionsAsync() {
            return base.Channel.GetLatestTransactionsAsync();
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.Transaction> GetLatestTransactionsLimit(int latestRecs) {
            return base.Channel.GetLatestTransactionsLimit(latestRecs);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Transaction>> GetLatestTransactionsLimitAsync(int latestRecs) {
            return base.Channel.GetLatestTransactionsLimitAsync(latestRecs);
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.Transaction> GetTransactionsForBudget(int budgetId) {
            return base.Channel.GetTransactionsForBudget(budgetId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Transaction>> GetTransactionsForBudgetAsync(int budgetId) {
            return base.Channel.GetTransactionsForBudgetAsync(budgetId);
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.Budget> GetAllBudgets() {
            return base.Channel.GetAllBudgets();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Budget>> GetAllBudgetsAsync() {
            return base.Channel.GetAllBudgetsAsync();
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.TypeTransaction> GetAllTypeTransactions() {
            return base.Channel.GetAllTypeTransactions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.TypeTransaction>> GetAllTypeTransactionsAsync() {
            return base.Channel.GetAllTypeTransactionsAsync();
        }
        
        public BMA.BusinessLogic.StartupInfo LoadItemCounts() {
            return base.Channel.LoadItemCounts();
        }
        
        public System.Threading.Tasks.Task<BMA.BusinessLogic.StartupInfo> LoadItemCountsAsync() {
            return base.Channel.LoadItemCountsAsync();
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.Transaction> SaveTransactions(System.Collections.Generic.List<BMA.BusinessLogic.Transaction> transactions) {
            return base.Channel.SaveTransactions(transactions);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Transaction>> SaveTransactionsAsync(System.Collections.Generic.List<BMA.BusinessLogic.Transaction> transactions) {
            return base.Channel.SaveTransactionsAsync(transactions);
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.Transaction> SyncTransactions(System.Collections.Generic.List<BMA.BusinessLogic.Transaction> transactions) {
            return base.Channel.SyncTransactions(transactions);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Transaction>> SyncTransactionsAsync(System.Collections.Generic.List<BMA.BusinessLogic.Transaction> transactions) {
            return base.Channel.SyncTransactionsAsync(transactions);
        }
        
        public System.Collections.Generic.List<BMA.BusinessLogic.Budget> SaveBudgets(System.Collections.Generic.List<BMA.BusinessLogic.Budget> transactions) {
            return base.Channel.SaveBudgets(transactions);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BMA.BusinessLogic.Budget>> SaveBudgetsAsync(System.Collections.Generic.List<BMA.BusinessLogic.Budget> transactions) {
            return base.Channel.SaveBudgetsAsync(transactions);
        }
    }
}
