//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transaction", Namespace="http://schemas.datacontract.org/2004/07/BMA.BusinessLogic")]
    [System.SerializableAttribute()]
    public partial class Transaction : ConsoleApplication1.ServiceReference1.BaseItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.Category CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameOfPlaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TipAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.TypeTransactionReason TransactionReasonTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.TypeTransaction TransactionTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.Category Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameOfPlace {
            get {
                return this.NameOfPlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.NameOfPlaceField, value) != true)) {
                    this.NameOfPlaceField = value;
                    this.RaisePropertyChanged("NameOfPlace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TipAmount {
            get {
                return this.TipAmountField;
            }
            set {
                if ((this.TipAmountField.Equals(value) != true)) {
                    this.TipAmountField = value;
                    this.RaisePropertyChanged("TipAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionId {
            get {
                return this.TransactionIdField;
            }
            set {
                if ((this.TransactionIdField.Equals(value) != true)) {
                    this.TransactionIdField = value;
                    this.RaisePropertyChanged("TransactionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.TypeTransactionReason TransactionReasonType {
            get {
                return this.TransactionReasonTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionReasonTypeField, value) != true)) {
                    this.TransactionReasonTypeField = value;
                    this.RaisePropertyChanged("TransactionReasonType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.TypeTransaction TransactionType {
            get {
                return this.TransactionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionTypeField, value) != true)) {
                    this.TransactionTypeField = value;
                    this.RaisePropertyChanged("TransactionType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindableBase", Namespace="http://schemas.datacontract.org/2004/07/BMA.BusinessLogic")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.BaseItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.Category))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.TypeTransactionReason))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.TypeTransaction))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.Budget))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.TypeSavingsDencity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.Transaction))]
    public partial class BindableBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseItem", Namespace="http://schemas.datacontract.org/2004/07/BMA.BusinessLogic")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.Category))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.TypeTransactionReason))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.TypeTransaction))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.Budget))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.TypeSavingsDencity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ServiceReference1.Transaction))]
    public partial class BaseItem : ConsoleApplication1.ServiceReference1.BindableBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/BMA.BusinessLogic")]
    [System.SerializableAttribute()]
    public partial class Category : ConsoleApplication1.ServiceReference1.BaseItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FromDate {
            get {
                return this.FromDateField;
            }
            set {
                if ((this.FromDateField.Equals(value) != true)) {
                    this.FromDateField = value;
                    this.RaisePropertyChanged("FromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ToDate {
            get {
                return this.ToDateField;
            }
            set {
                if ((this.ToDateField.Equals(value) != true)) {
                    this.ToDateField = value;
                    this.RaisePropertyChanged("ToDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypeTransactionReason", Namespace="http://schemas.datacontract.org/2004/07/BMA.BusinessLogic")]
    [System.SerializableAttribute()]
    public partial class TypeTransactionReason : ConsoleApplication1.ServiceReference1.BaseItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeTransactionReasonIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeTransactionReasonId {
            get {
                return this.TypeTransactionReasonIdField;
            }
            set {
                if ((this.TypeTransactionReasonIdField.Equals(value) != true)) {
                    this.TypeTransactionReasonIdField = value;
                    this.RaisePropertyChanged("TypeTransactionReasonId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypeTransaction", Namespace="http://schemas.datacontract.org/2004/07/BMA.BusinessLogic")]
    [System.SerializableAttribute()]
    public partial class TypeTransaction : ConsoleApplication1.ServiceReference1.BaseItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeTransactionIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeTransactionId {
            get {
                return this.TypeTransactionIdField;
            }
            set {
                if ((this.TypeTransactionIdField.Equals(value) != true)) {
                    this.TypeTransactionIdField = value;
                    this.RaisePropertyChanged("TypeTransactionId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Budget", Namespace="http://schemas.datacontract.org/2004/07/BMA.BusinessLogic")]
    [System.SerializableAttribute()]
    public partial class Budget : ConsoleApplication1.ServiceReference1.BaseItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BudgetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IncludeInstallmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BudgetId {
            get {
                return this.BudgetIdField;
            }
            set {
                if ((this.BudgetIdField.Equals(value) != true)) {
                    this.BudgetIdField = value;
                    this.RaisePropertyChanged("BudgetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FromDate {
            get {
                return this.FromDateField;
            }
            set {
                if ((this.FromDateField.Equals(value) != true)) {
                    this.FromDateField = value;
                    this.RaisePropertyChanged("FromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasChanged {
            get {
                return this.HasChangedField;
            }
            set {
                if ((this.HasChangedField.Equals(value) != true)) {
                    this.HasChangedField = value;
                    this.RaisePropertyChanged("HasChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IncludeInstallments {
            get {
                return this.IncludeInstallmentsField;
            }
            set {
                if ((this.IncludeInstallmentsField.Equals(value) != true)) {
                    this.IncludeInstallmentsField = value;
                    this.RaisePropertyChanged("IncludeInstallments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ToDate {
            get {
                return this.ToDateField;
            }
            set {
                if ((this.ToDateField.Equals(value) != true)) {
                    this.ToDateField = value;
                    this.RaisePropertyChanged("ToDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypeSavingsDencity", Namespace="http://schemas.datacontract.org/2004/07/BMA.BusinessLogic")]
    [System.SerializableAttribute()]
    public partial class TypeSavingsDencity : ConsoleApplication1.ServiceReference1.BaseItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeSavingsDencityIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeSavingsDencityId {
            get {
                return this.TypeSavingsDencityIdField;
            }
            set {
                if ((this.TypeSavingsDencityIdField.Equals(value) != true)) {
                    this.TypeSavingsDencityIdField = value;
                    this.RaisePropertyChanged("TypeSavingsDencityId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StartupInfo", Namespace="http://schemas.datacontract.org/2004/07/BMA.BusinessLogic")]
    [System.SerializableAttribute()]
    public partial class StartupInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BudgetCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TargetCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BudgetCount {
            get {
                return this.BudgetCountField;
            }
            set {
                if ((this.BudgetCountField.Equals(value) != true)) {
                    this.BudgetCountField = value;
                    this.RaisePropertyChanged("BudgetCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TargetCount {
            get {
                return this.TargetCountField;
            }
            set {
                if ((this.TargetCountField.Equals(value) != true)) {
                    this.TargetCountField = value;
                    this.RaisePropertyChanged("TargetCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionCount {
            get {
                return this.TransactionCountField;
            }
            set {
                if ((this.TransactionCountField.Equals(value) != true)) {
                    this.TransactionCountField = value;
                    this.RaisePropertyChanged("TransactionCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StaticTypeList", Namespace="http://schemas.datacontract.org/2004/07/BMA.BusinessLogic")]
    [System.SerializableAttribute()]
    public partial class StaticTypeList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Category> CategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.TypeSavingsDencity> TypeSavingsDencitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.TypeTransactionReason> TypeTransactionReasonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.TypeTransaction> TypeTransactionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Category> Categories {
            get {
                return this.CategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriesField, value) != true)) {
                    this.CategoriesField = value;
                    this.RaisePropertyChanged("Categories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.TypeSavingsDencity> TypeSavingsDencities {
            get {
                return this.TypeSavingsDencitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeSavingsDencitiesField, value) != true)) {
                    this.TypeSavingsDencitiesField = value;
                    this.RaisePropertyChanged("TypeSavingsDencities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.TypeTransactionReason> TypeTransactionReasons {
            get {
                return this.TypeTransactionReasonsField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeTransactionReasonsField, value) != true)) {
                    this.TypeTransactionReasonsField = value;
                    this.RaisePropertyChanged("TypeTransactionReasons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.TypeTransaction> TypeTransactions {
            get {
                return this.TypeTransactionsField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeTransactionsField, value) != true)) {
                    this.TypeTransactionsField = value;
                    this.RaisePropertyChanged("TypeTransactions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMain")]
    public interface IMain {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetAllTransactions", ReplyAction="http://tempuri.org/IMain/GetAllTransactionsResponse")]
        System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction> GetAllTransactions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetAllTransactions", ReplyAction="http://tempuri.org/IMain/GetAllTransactionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction>> GetAllTransactionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetLatestTransactions", ReplyAction="http://tempuri.org/IMain/GetLatestTransactionsResponse")]
        System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction> GetLatestTransactions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetLatestTransactions", ReplyAction="http://tempuri.org/IMain/GetLatestTransactionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction>> GetLatestTransactionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetLatestTransactionsLimit", ReplyAction="http://tempuri.org/IMain/GetLatestTransactionsLimitResponse")]
        System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction> GetLatestTransactionsLimit(int latestRecs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetLatestTransactionsLimit", ReplyAction="http://tempuri.org/IMain/GetLatestTransactionsLimitResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction>> GetLatestTransactionsLimitAsync(int latestRecs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetTransactionsForBudget", ReplyAction="http://tempuri.org/IMain/GetTransactionsForBudgetResponse")]
        System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction> GetTransactionsForBudget(int budgetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetTransactionsForBudget", ReplyAction="http://tempuri.org/IMain/GetTransactionsForBudgetResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction>> GetTransactionsForBudgetAsync(int budgetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetAllBudgets", ReplyAction="http://tempuri.org/IMain/GetAllBudgetsResponse")]
        System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Budget> GetAllBudgets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetAllBudgets", ReplyAction="http://tempuri.org/IMain/GetAllBudgetsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Budget>> GetAllBudgetsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetAllTypeTransactions", ReplyAction="http://tempuri.org/IMain/GetAllTypeTransactionsResponse")]
        System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.TypeTransaction> GetAllTypeTransactions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetAllTypeTransactions", ReplyAction="http://tempuri.org/IMain/GetAllTypeTransactionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.TypeTransaction>> GetAllTypeTransactionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/LoadItemCounts", ReplyAction="http://tempuri.org/IMain/LoadItemCountsResponse")]
        ConsoleApplication1.ServiceReference1.StartupInfo LoadItemCounts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/LoadItemCounts", ReplyAction="http://tempuri.org/IMain/LoadItemCountsResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.StartupInfo> LoadItemCountsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetAllStaticData", ReplyAction="http://tempuri.org/IMain/GetAllStaticDataResponse")]
        ConsoleApplication1.ServiceReference1.StaticTypeList GetAllStaticData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetAllStaticData", ReplyAction="http://tempuri.org/IMain/GetAllStaticDataResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.StaticTypeList> GetAllStaticDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/SaveTransactions", ReplyAction="http://tempuri.org/IMain/SaveTransactionsResponse")]
        System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction> SaveTransactions(System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction> transactions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/SaveTransactions", ReplyAction="http://tempuri.org/IMain/SaveTransactionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction>> SaveTransactionsAsync(System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction> transactions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/SaveTransaction", ReplyAction="http://tempuri.org/IMain/SaveTransactionResponse")]
        System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction> SaveTransaction(ConsoleApplication1.ServiceReference1.Transaction transaction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/SaveTransaction", ReplyAction="http://tempuri.org/IMain/SaveTransactionResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction>> SaveTransactionAsync(ConsoleApplication1.ServiceReference1.Transaction transaction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/SaveCategories", ReplyAction="http://tempuri.org/IMain/SaveCategoriesResponse")]
        System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Category> SaveCategories(System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Category> categories);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/SaveCategories", ReplyAction="http://tempuri.org/IMain/SaveCategoriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Category>> SaveCategoriesAsync(System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Category> categories);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainChannel : ConsoleApplication1.ServiceReference1.IMain, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainClient : System.ServiceModel.ClientBase<ConsoleApplication1.ServiceReference1.IMain>, ConsoleApplication1.ServiceReference1.IMain {
        
        public MainClient() {
        }
        
        public MainClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MainClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction> GetAllTransactions() {
            return base.Channel.GetAllTransactions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction>> GetAllTransactionsAsync() {
            return base.Channel.GetAllTransactionsAsync();
        }
        
        public System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction> GetLatestTransactions() {
            return base.Channel.GetLatestTransactions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction>> GetLatestTransactionsAsync() {
            return base.Channel.GetLatestTransactionsAsync();
        }
        
        public System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction> GetLatestTransactionsLimit(int latestRecs) {
            return base.Channel.GetLatestTransactionsLimit(latestRecs);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction>> GetLatestTransactionsLimitAsync(int latestRecs) {
            return base.Channel.GetLatestTransactionsLimitAsync(latestRecs);
        }
        
        public System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction> GetTransactionsForBudget(int budgetId) {
            return base.Channel.GetTransactionsForBudget(budgetId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction>> GetTransactionsForBudgetAsync(int budgetId) {
            return base.Channel.GetTransactionsForBudgetAsync(budgetId);
        }
        
        public System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Budget> GetAllBudgets() {
            return base.Channel.GetAllBudgets();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Budget>> GetAllBudgetsAsync() {
            return base.Channel.GetAllBudgetsAsync();
        }
        
        public System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.TypeTransaction> GetAllTypeTransactions() {
            return base.Channel.GetAllTypeTransactions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.TypeTransaction>> GetAllTypeTransactionsAsync() {
            return base.Channel.GetAllTypeTransactionsAsync();
        }
        
        public ConsoleApplication1.ServiceReference1.StartupInfo LoadItemCounts() {
            return base.Channel.LoadItemCounts();
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.StartupInfo> LoadItemCountsAsync() {
            return base.Channel.LoadItemCountsAsync();
        }
        
        public ConsoleApplication1.ServiceReference1.StaticTypeList GetAllStaticData() {
            return base.Channel.GetAllStaticData();
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.StaticTypeList> GetAllStaticDataAsync() {
            return base.Channel.GetAllStaticDataAsync();
        }
        
        public System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction> SaveTransactions(System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction> transactions) {
            return base.Channel.SaveTransactions(transactions);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction>> SaveTransactionsAsync(System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction> transactions) {
            return base.Channel.SaveTransactionsAsync(transactions);
        }
        
        public System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction> SaveTransaction(ConsoleApplication1.ServiceReference1.Transaction transaction) {
            return base.Channel.SaveTransaction(transaction);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Transaction>> SaveTransactionAsync(ConsoleApplication1.ServiceReference1.Transaction transaction) {
            return base.Channel.SaveTransactionAsync(transaction);
        }
        
        public System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Category> SaveCategories(System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Category> categories) {
            return base.Channel.SaveCategories(categories);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Category>> SaveCategoriesAsync(System.Collections.Generic.List<ConsoleApplication1.ServiceReference1.Category> categories) {
            return base.Channel.SaveCategoriesAsync(categories);
        }
    }
}
